<PBESchema>
  <Components>
    <type name="PBLabs.Rendering2D::BaseRenderComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::BaseRenderComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::IDrawable2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <method name="InvalidateRenderCache" declaredBy="PBLabs.Rendering2D::BaseRenderComponent" returnType="void"/>
        <accessor name="RenderCacheKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="PositionReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <method name="OnDraw" declaredBy="PBLabs.Rendering2D::BaseRenderComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawManager2D" optional="false"/>
        </method>
        <accessor name="RenderSortKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="RotationReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <accessor name="RenderPosition" access="readonly" type="flash.geom::Point" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="SizeReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="PositionOffset" type="flash.geom::Point"/>
        <accessor name="LayerIndex" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Box2D::Box2DDebugComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Box2D::Box2DDebugComponent">
        <extendsClass type="PBLabs.Rendering2D::BaseRenderComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::IDrawable2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="Manager" type="PBLabs.Box2D::Box2DManagerComponent"/>
        <accessor name="Scene" access="readwrite" type="PBLabs.Rendering2D::IDrawManager2D" declaredBy="PBLabs.Box2D::Box2DDebugComponent"/>
        <accessor name="LayerIndex" access="readwrite" type="int" declaredBy="PBLabs.Box2D::Box2DDebugComponent"/>
        <method name="OnDraw" declaredBy="PBLabs.Box2D::Box2DDebugComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawManager2D" optional="false"/>
        </method>
        <method name="InvalidateRenderCache" declaredBy="PBLabs.Rendering2D::BaseRenderComponent" returnType="void"/>
        <accessor name="RenderCacheKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="PositionReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <accessor name="RenderSortKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="RotationReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <accessor name="RenderPosition" access="readonly" type="flash.geom::Point" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="SizeReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="PositionOffset" type="flash.geom::Point"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Engine.Entity::EntityComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Engine.Entity::EntityComponent">
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Engine.Components::GroupManagerComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Engine.Components::GroupManagerComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <method name="RemoveMember" declaredBy="PBLabs.Engine.Components::GroupManagerComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Components::GroupMemberComponent" optional="false"/>
        </method>
        <method name="AddMember" declaredBy="PBLabs.Engine.Components::GroupManagerComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Components::GroupMemberComponent" optional="false"/>
        </method>
        <accessor name="EntityList" access="readonly" type="Array" declaredBy="PBLabs.Engine.Components::GroupManagerComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::SimpleSpatialComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::SimpleSpatialComponent">
        <extendsClass type="PBLabs.Engine.Components::TickedComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::ISpatialObject2D"/>
        <implementsInterface type="PBLabs.Engine.Core::ITickedObject"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <accessor name="QueryMask" access="readwrite" type="PBLabs.Engine.Core::ObjectType" declaredBy="PBLabs.Rendering2D::SimpleSpatialComponent"/>
        <variable name="Size" type="flash.geom::Point"/>
        <variable name="SpatialManager" type="PBLabs.Rendering2D::ISpatialManager2D"/>
        <accessor name="WorldExtents" access="readonly" type="flash.geom::Rectangle" declaredBy="PBLabs.Rendering2D::SimpleSpatialComponent"/>
        <method name="CastRay" declaredBy="PBLabs.Rendering2D::SimpleSpatialComponent" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="flash.geom::Point" optional="false"/>
          <parameter index="3" type="PBLabs.Rendering2D::RayHitInfo" optional="false"/>
        </method>
        <method name="OnTick" declaredBy="PBLabs.Rendering2D::SimpleSpatialComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="Position" type="flash.geom::Point"/>
        <variable name="Velocity" type="flash.geom::Point"/>
        <variable name="Rotation" type="Number"/>
        <variable name="RegisterForTicks" type="Boolean"/>
        <method name="OnInterpolateTick" declaredBy="PBLabs.Engine.Components::TickedComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="UpdatePriority" type="Number"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::SimpleShapeRenderComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::SimpleShapeRenderComponent">
        <extendsClass type="PBLabs.Rendering2D::BaseRenderComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::IDrawable2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="ShowCircle" type="Boolean"/>
        <method name="OnDraw" declaredBy="PBLabs.Rendering2D::SimpleShapeRenderComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawManager2D" optional="false"/>
        </method>
        <variable name="Radius" type="Number"/>
        <variable name="FillColor" type="Number"/>
        <variable name="BorderThickness" type="Number"/>
        <variable name="BorderColor" type="Number"/>
        <variable name="ShowSquare" type="Boolean"/>
        <method name="InvalidateRenderCache" declaredBy="PBLabs.Rendering2D::BaseRenderComponent" returnType="void"/>
        <accessor name="RenderCacheKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="PositionReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <accessor name="RenderSortKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="RotationReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <accessor name="RenderPosition" access="readonly" type="flash.geom::Point" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="SizeReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="PositionOffset" type="flash.geom::Point"/>
        <accessor name="LayerIndex" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::Interpolated2DMoverComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::Interpolated2DMoverComponent">
        <extendsClass type="PBLabs.Rendering2D::SimpleSpatialComponent"/>
        <extendsClass type="PBLabs.Engine.Components::TickedComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::ISpatialObject2D"/>
        <implementsInterface type="PBLabs.Engine.Core::ITickedObject"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <method name="OnTick" declaredBy="PBLabs.Rendering2D::Interpolated2DMoverComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="GoalPosition" type="flash.geom::Point"/>
        <accessor name="InitialRotation" access="writeonly" type="Number" declaredBy="PBLabs.Rendering2D::Interpolated2DMoverComponent"/>
        <variable name="RotationSpeed" type="Number"/>
        <variable name="TranslationSpeed" type="Number"/>
        <variable name="Nudge" type="Number"/>
        <accessor name="InitialPosition" access="writeonly" type="flash.geom::Point" declaredBy="PBLabs.Rendering2D::Interpolated2DMoverComponent"/>
        <variable name="FaceInMovementDirection" type="Boolean"/>
        <variable name="GoalRotation" type="Number"/>
        <accessor name="QueryMask" access="readwrite" type="PBLabs.Engine.Core::ObjectType" declaredBy="PBLabs.Rendering2D::SimpleSpatialComponent"/>
        <variable name="Size" type="flash.geom::Point"/>
        <variable name="SpatialManager" type="PBLabs.Rendering2D::ISpatialManager2D"/>
        <accessor name="WorldExtents" access="readonly" type="flash.geom::Rectangle" declaredBy="PBLabs.Rendering2D::SimpleSpatialComponent"/>
        <method name="CastRay" declaredBy="PBLabs.Rendering2D::SimpleSpatialComponent" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="flash.geom::Point" optional="false"/>
          <parameter index="3" type="PBLabs.Rendering2D::RayHitInfo" optional="false"/>
        </method>
        <variable name="Position" type="flash.geom::Point"/>
        <variable name="Velocity" type="flash.geom::Point"/>
        <variable name="Rotation" type="Number"/>
        <variable name="RegisterForTicks" type="Boolean"/>
        <method name="OnInterpolateTick" declaredBy="PBLabs.Engine.Components::TickedComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="UpdatePriority" type="Number"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Box2D::Box2DSpatialComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Box2D::Box2DSpatialComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <accessor name="Size" access="readwrite" type="flash.geom::Point" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="Position" access="readwrite" type="flash.geom::Point" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="CanMove" access="readwrite" type="Boolean" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="LinearVelocity" access="readwrite" type="flash.geom::Point" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="CanRotate" access="readwrite" type="Boolean" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="CanSleep" access="readwrite" type="Boolean" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="Rotation" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="AngularVelocity" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="Manager" access="readwrite" type="PBLabs.Box2D::Box2DManagerComponent" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="CollidesContinuously" access="readwrite" type="Boolean" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="CollidesWithTypes" access="readwrite" type="PBLabs.Engine.Core::ObjectType" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <method name="UpdateMass" declaredBy="PBLabs.Box2D::Box2DSpatialComponent" returnType="void"/>
        <method name="BuildCollisionShapes" declaredBy="PBLabs.Box2D::Box2DSpatialComponent" returnType="void"/>
        <accessor name="CollisionType" access="readwrite" type="PBLabs.Engine.Core::ObjectType" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="CollisionShapes" access="readwrite" type="Array" declaredBy="PBLabs.Box2D::Box2DSpatialComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::AnimationController" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::AnimationController">
        <extendsClass type="PBLabs.Engine.Components::AnimatedComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Core::IAnimatedObject"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="CurrentAnimationStartTimeReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="Animations" type="Array"/>
        <variable name="SpriteSheetReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="CurrentAnimationDurationReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="CurrentFrameReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <method name="SetAnimation" declaredBy="PBLabs.Rendering2D::AnimationController" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::AnimationControllerInfo" optional="false"/>
        </method>
        <variable name="_typeHint_Animations" type="String"/>
        <variable name="DefaultAnimation" type="String"/>
        <method name="OnFrame" declaredBy="PBLabs.Rendering2D::AnimationController" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="CurrentAnimationReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="UpdatePriority" type="Number">
          <metadata name="EditorIgnore"/>
        </variable>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::SpriteRenderComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::SpriteRenderComponent">
        <extendsClass type="PBLabs.Rendering2D::BaseRenderComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::IDrawable2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="Fade" type="Number"/>
        <method name="OnDraw" declaredBy="PBLabs.Rendering2D::SpriteRenderComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawManager2D" optional="false"/>
        </method>
        <accessor name="FlipY" access="readwrite" type="Boolean" declaredBy="PBLabs.Rendering2D::SpriteRenderComponent"/>
        <accessor name="SpriteSheet" access="readwrite" type="PBLabs.Rendering2D::SpriteSheetComponent" declaredBy="PBLabs.Rendering2D::SpriteRenderComponent"/>
        <accessor name="FlipX" access="readwrite" type="Boolean" declaredBy="PBLabs.Rendering2D::SpriteRenderComponent"/>
        <accessor name="SpriteIndex" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::SpriteRenderComponent"/>
        <accessor name="Smoothing" access="readwrite" type="Boolean" declaredBy="PBLabs.Rendering2D::SpriteRenderComponent"/>
        <method name="InvalidateRenderCache" declaredBy="PBLabs.Rendering2D::BaseRenderComponent" returnType="void"/>
        <accessor name="RenderCacheKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="PositionReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <accessor name="RenderSortKey" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="RotationReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <accessor name="RenderPosition" access="readonly" type="flash.geom::Point" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <variable name="SizeReference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="PositionOffset" type="flash.geom::Point"/>
        <accessor name="LayerIndex" access="readwrite" type="int" declaredBy="PBLabs.Rendering2D::BaseRenderComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Engine.Components::TickedComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Engine.Components::TickedComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Core::ITickedObject"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="RegisterForTicks" type="Boolean"/>
        <method name="OnTick" declaredBy="PBLabs.Engine.Components::TickedComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="OnInterpolateTick" declaredBy="PBLabs.Engine.Components::TickedComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="UpdatePriority" type="Number"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.StupidSampleGame::DudeController" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.StupidSampleGame::DudeController">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Core::ITickedObject"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <accessor name="Input" access="readwrite" type="PBLabs.Engine.Core::InputMap" declaredBy="PBLabs.StupidSampleGame::DudeController"/>
        <variable name="VelocityReference" type="PBLabs.Engine.Entity::PropertyReference">
          <metadata name="PropertyType">
            <arg key="Value" value="flash.geom.Point"/>
          </metadata>
        </variable>
        <method name="OnTick" declaredBy="PBLabs.StupidSampleGame::DudeController" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="OnInterpolateTick" declaredBy="PBLabs.StupidSampleGame::DudeController" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::BaseSceneComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <constant name="LAYER_COUNT" type="int"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::BaseSceneComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Core::IAnimatedObject"/>
        <implementsInterface type="PBLabs.Rendering2D::IDrawManager2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <method name="GetLayerCacheBitmap" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="flash.display::BitmapData">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <method name="IsLayerCached" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="Boolean">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <accessor name="SceneView" access="readwrite" type="PBLabs.Rendering2D.UI::IUITarget" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <accessor name="SceneViewName" access="readwrite" type="String" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <method name="InvalidateAllLayerCaches" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void"/>
        <variable name="CacheLayers" type="Array"/>
        <variable name="RenderMask" type="PBLabs.Engine.Core::ObjectType"/>
        <method name="RemoveInterstitialDrawer" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="DoesLayerNeedUpdate" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="Boolean">
          <parameter index="1" type="int" optional="false"/>
          <parameter index="2" type="Array" optional="false"/>
        </method>
        <accessor name="LastDrawnItem" access="readonly" type="PBLabs.Rendering2D::IDrawable2D" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <method name="GetBackBuffer" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="flash.display::BitmapData"/>
        <accessor name="NextDrawnItem" access="readonly" type="PBLabs.Rendering2D::IDrawable2D" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <method name="DrawDisplayObject" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="OnFrame" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="RemoveAlwaysDrawnItem" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="TransformWorldToScreen" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="Number" optional="true"/>
        </method>
        <method name="DrawBitmapData" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="flash.display::BitmapData" optional="false"/>
          <parameter index="2" type="flash.geom::Matrix" optional="false"/>
        </method>
        <method name="TransformScreenToWorld" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <method name="AddInterstitialDrawer" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="AddAlwaysDrawnItem" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="InvalidateLayerCache" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <variable name="SpatialDatabase" type="PBLabs.Rendering2D::ISpatialManager2D"/>
        <variable name="Smoothing" type="Boolean"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::BasicSpatialManager2D" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::BasicSpatialManager2D">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::ISpatialManager2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <method name="CastRay" declaredBy="PBLabs.Rendering2D::BasicSpatialManager2D" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="flash.geom::Point" optional="false"/>
          <parameter index="3" type="PBLabs.Engine.Core::ObjectType" optional="false"/>
          <parameter index="4" type="PBLabs.Rendering2D::RayHitInfo" optional="false"/>
        </method>
        <method name="RemoveSpatialObject" declaredBy="PBLabs.Rendering2D::BasicSpatialManager2D" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::ISpatialObject2D" optional="false"/>
        </method>
        <method name="AddSpatialObject" declaredBy="PBLabs.Rendering2D::BasicSpatialManager2D" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::ISpatialObject2D" optional="false"/>
        </method>
        <method name="QueryCircle" declaredBy="PBLabs.Rendering2D::BasicSpatialManager2D" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="PBLabs.Engine.Core::ObjectType" optional="false"/>
          <parameter index="4" type="Array" optional="false"/>
        </method>
        <method name="QueryRectangle" declaredBy="PBLabs.Rendering2D::BasicSpatialManager2D" returnType="Boolean">
          <parameter index="1" type="flash.geom::Rectangle" optional="false"/>
          <parameter index="2" type="PBLabs.Engine.Core::ObjectType" optional="false"/>
          <parameter index="3" type="Array" optional="false"/>
        </method>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::SpriteSheetComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::SpriteSheetComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <method name="GetFrame" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent" returnType="flash.display::BitmapData">
          <parameter index="1" type="int" optional="false"/>
          <parameter index="2" type="Number" optional="true"/>
        </method>
        <accessor name="IsLoaded" access="readonly" type="Boolean" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="ImageData" access="readonly" type="flash.display::BitmapData" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="Center" access="readwrite" type="flash.geom::Point" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="ImageFilename" access="readwrite" type="String" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="Image" access="readwrite" type="PBLabs.Rendering2D::ImageResource" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="DegreesPerDirection" access="readonly" type="Number" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="Divider" access="readwrite" type="PBLabs.Rendering2D::ISpriteSheetDivider" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <variable name="DirectionsPerFrame" type="Number"/>
        <accessor name="FrameCount" access="readonly" type="int" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="RawFrameCount" access="readonly" type="int" declaredBy="PBLabs.Rendering2D::SpriteSheetComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Engine.Components::GroupMemberComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Engine.Components::GroupMemberComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <accessor name="GroupName" access="readwrite" type="String" declaredBy="PBLabs.Engine.Components::GroupMemberComponent"/>
        <accessor name="GroupManager" access="readonly" type="PBLabs.Engine.Components::GroupManagerComponent" declaredBy="PBLabs.Engine.Components::GroupMemberComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Engine.Components::AnimatedComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Engine.Components::AnimatedComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Core::IAnimatedObject"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="UpdatePriority" type="Number">
          <metadata name="EditorIgnore"/>
        </variable>
        <method name="OnFrame" declaredBy="PBLabs.Engine.Components::AnimatedComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Box2D::Box2DManagerComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Box2D::Box2DManagerComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Core::ITickedObject"/>
        <implementsInterface type="PBLabs.Rendering2D::ISpatialManager2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <method name="Add" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="Box2D.Dynamics::b2Body">
          <parameter index="1" type="Box2D.Dynamics::b2BodyDef" optional="false"/>
        </method>
        <accessor name="WorldBounds" access="readwrite" type="flash.geom::Rectangle" declaredBy="PBLabs.Box2D::Box2DManagerComponent"/>
        <method name="SetDebugDrawer" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2DebugDraw" optional="false"/>
        </method>
        <accessor name="Scale" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::Box2DManagerComponent"/>
        <method name="AddSpatialObject" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::ISpatialObject2D" optional="false"/>
        </method>
        <method name="QueryCircle" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="PBLabs.Engine.Core::ObjectType" optional="false"/>
          <parameter index="4" type="Array" optional="false"/>
        </method>
        <accessor name="InverseScale" access="readonly" type="Number" declaredBy="PBLabs.Box2D::Box2DManagerComponent"/>
        <method name="Remove" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2Body" optional="false"/>
        </method>
        <method name="CastRay" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="flash.geom::Point" optional="false"/>
          <parameter index="3" type="PBLabs.Engine.Core::ObjectType" optional="false"/>
          <parameter index="4" type="PBLabs.Rendering2D::RayHitInfo" optional="false"/>
        </method>
        <accessor name="AllowSleep" access="readwrite" type="Boolean" declaredBy="PBLabs.Box2D::Box2DManagerComponent"/>
        <method name="OnTick" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="RemoveSpatialObject" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::ISpatialObject2D" optional="false"/>
        </method>
        <method name="OnInterpolateTick" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="QueryRectangle" declaredBy="PBLabs.Box2D::Box2DManagerComponent" returnType="Boolean">
          <parameter index="1" type="flash.geom::Rectangle" optional="false"/>
          <parameter index="2" type="PBLabs.Engine.Core::ObjectType" optional="false"/>
          <parameter index="3" type="Array" optional="false"/>
        </method>
        <accessor name="Gravity" access="readwrite" type="flash.geom::Point" declaredBy="PBLabs.Box2D::Box2DManagerComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::Scene2DComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::Scene2DComponent">
        <extendsClass type="PBLabs.Rendering2D::BaseSceneComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::IDrawManager2D"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <implementsInterface type="PBLabs.Engine.Core::IAnimatedObject"/>
        <method name="TransformWorldToScreen" declaredBy="PBLabs.Rendering2D::Scene2DComponent" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
          <parameter index="2" type="Number" optional="true"/>
        </method>
        <accessor name="Position" access="readwrite" type="flash.geom::Point" declaredBy="PBLabs.Rendering2D::Scene2DComponent"/>
        <method name="TransformScreenToWorld" declaredBy="PBLabs.Rendering2D::Scene2DComponent" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="TrackObject" access="readwrite" type="PBLabs.Rendering2D::IDrawable2D" declaredBy="PBLabs.Rendering2D::Scene2DComponent"/>
        <method name="GetLayerCacheBitmap" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="flash.display::BitmapData">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <method name="IsLayerCached" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="Boolean">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <accessor name="SceneView" access="readwrite" type="PBLabs.Rendering2D.UI::IUITarget" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <accessor name="SceneViewName" access="readwrite" type="String" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <method name="InvalidateAllLayerCaches" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void"/>
        <variable name="CacheLayers" type="Array"/>
        <variable name="RenderMask" type="PBLabs.Engine.Core::ObjectType"/>
        <method name="RemoveInterstitialDrawer" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="DoesLayerNeedUpdate" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="Boolean">
          <parameter index="1" type="int" optional="false"/>
          <parameter index="2" type="Array" optional="false"/>
        </method>
        <accessor name="LastDrawnItem" access="readonly" type="PBLabs.Rendering2D::IDrawable2D" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <method name="GetBackBuffer" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="flash.display::BitmapData"/>
        <accessor name="NextDrawnItem" access="readonly" type="PBLabs.Rendering2D::IDrawable2D" declaredBy="PBLabs.Rendering2D::BaseSceneComponent"/>
        <method name="DrawDisplayObject" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="OnFrame" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="RemoveAlwaysDrawnItem" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="DrawBitmapData" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="flash.display::BitmapData" optional="false"/>
          <parameter index="2" type="flash.geom::Matrix" optional="false"/>
        </method>
        <method name="AddInterstitialDrawer" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="AddAlwaysDrawnItem" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="PBLabs.Rendering2D::IDrawable2D" optional="false"/>
        </method>
        <method name="InvalidateLayerCache" declaredBy="PBLabs.Rendering2D::BaseSceneComponent" returnType="void">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <variable name="SpatialDatabase" type="PBLabs.Rendering2D::ISpatialManager2D"/>
        <variable name="Smoothing" type="Boolean"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Animation::AnimatorComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Animation::AnimatorComponent">
        <extendsClass type="PBLabs.Engine.Components::AnimatedComponent"/>
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Core::IAnimatedObject"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="Reference" type="PBLabs.Engine.Entity::PropertyReference"/>
        <variable name="AutoPlay" type="Boolean"/>
        <variable name="Animations" type="flash.utils::Dictionary"/>
        <method name="Play" declaredBy="PBLabs.Animation::AnimatorComponent" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
        </method>
        <variable name="DefaultAnimation" type="String"/>
        <method name="OnFrame" declaredBy="PBLabs.Animation::AnimatorComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="UpdatePriority" type="Number">
          <metadata name="EditorIgnore"/>
        </variable>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::MultiSpriteSheetHelper" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::MultiSpriteSheetHelper">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <variable name="Sheets" type="flash.utils::Dictionary"/>
        <variable name="Divider" type="PBLabs.Rendering2D::ISpriteSheetDivider"/>
        <variable name="Center" type="flash.geom::Point"/>
        <variable name="DirectionsPerFrame" type="int"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
    <type name="PBLabs.Engine.Components::DataComponent" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Engine.Components::DataComponent">
        <extendsClass type="PBLabs.Engine.Entity::EntityComponent"/>
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Engine.Entity::IEntityComponent"/>
        <accessor name="Name" access="readonly" type="String" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <accessor name="IsRegistered" access="readonly" type="Boolean" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Reset" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
        <accessor name="Owner" access="readonly" type="PBLabs.Engine.Entity::IEntity" declaredBy="PBLabs.Engine.Entity::EntityComponent"/>
        <method name="Register" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void">
          <parameter index="1" type="PBLabs.Engine.Entity::IEntity" optional="false"/>
          <parameter index="2" type="String" optional="false"/>
        </method>
        <method name="Unregister" declaredBy="PBLabs.Engine.Entity::EntityComponent" returnType="void"/>
      </factory>
    </type>
  </Components>
  <Types>
    <type name="Box2D.Dynamics.Joints::b2PrismaticJointDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2PrismaticJointDef">
        <extendsClass type="Box2D.Dynamics.Joints::b2JointDef"/>
        <extendsClass type="Object"/>
        <variable name="motorSpeed" type="Number"/>
        <variable name="localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="upperTranslation" type="Number"/>
        <variable name="enableMotor" type="Boolean"/>
        <variable name="localAxis1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="maxMotorForce" type="Number"/>
        <method name="Initialize" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJointDef" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="2" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="4" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <variable name="referenceAngle" type="Number"/>
        <variable name="lowerTranslation" type="Number"/>
        <variable name="enableLimit" type="Boolean"/>
        <variable name="body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="collideConnected" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="userData" type="*"/>
      </factory>
    </type>
    <type name="PBLabs.Box2D::CircleCollisionShape" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Box2D::CircleCollisionShape">
        <extendsClass type="PBLabs.Box2D::CollisionShape"/>
        <extendsClass type="Object"/>
        <accessor name="Offset" access="readwrite" type="flash.geom::Point" declaredBy="PBLabs.Box2D::CircleCollisionShape"/>
        <accessor name="Radius" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::CircleCollisionShape"/>
        <accessor name="Restitution" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::CollisionShape"/>
        <accessor name="Friction" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::CollisionShape"/>
        <accessor name="IsTrigger" access="readwrite" type="Boolean" declaredBy="PBLabs.Box2D::CollisionShape"/>
        <method name="CreateShape" declaredBy="PBLabs.Box2D::CollisionShape" returnType="Box2D.Collision.Shapes::b2ShapeDef">
          <parameter index="1" type="PBLabs.Box2D::Box2DSpatialComponent" optional="false"/>
        </method>
        <accessor name="Density" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::CollisionShape"/>
      </factory>
    </type>
    <type name="PBLabs.Box2D::PolygonCollisionShape" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Box2D::PolygonCollisionShape">
        <extendsClass type="PBLabs.Box2D::CollisionShape"/>
        <extendsClass type="Object"/>
        <accessor name="Vertices" access="readwrite" type="Array" declaredBy="PBLabs.Box2D::PolygonCollisionShape"/>
        <accessor name="Restitution" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::CollisionShape"/>
        <accessor name="Friction" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::CollisionShape"/>
        <accessor name="IsTrigger" access="readwrite" type="Boolean" declaredBy="PBLabs.Box2D::CollisionShape"/>
        <method name="CreateShape" declaredBy="PBLabs.Box2D::CollisionShape" returnType="Box2D.Collision.Shapes::b2ShapeDef">
          <parameter index="1" type="PBLabs.Box2D::Box2DSpatialComponent" optional="false"/>
        </method>
        <accessor name="Density" access="readwrite" type="Number" declaredBy="PBLabs.Box2D::CollisionShape"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Contacts::b2CircleContact" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <method name="Destroy" declaredBy="Box2D.Dynamics.Contacts::b2CircleContact" returnType="void">
        <parameter index="1" type="Box2D.Dynamics.Contacts::b2Contact" optional="false"/>
        <parameter index="2" type="*" optional="false"/>
      </method>
      <method name="Create" declaredBy="Box2D.Dynamics.Contacts::b2CircleContact" returnType="Box2D.Dynamics.Contacts::b2Contact">
        <parameter index="1" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
        <parameter index="2" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
        <parameter index="3" type="*" optional="false"/>
      </method>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Contacts::b2CircleContact">
        <extendsClass type="Box2D.Dynamics.Contacts::b2Contact"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
        </constructor>
        <variable name="m_manifold" type="Box2D.Collision::b2Manifold"/>
        <method name="GetManifolds" declaredBy="Box2D.Dynamics.Contacts::b2CircleContact" returnType="Array"/>
        <method name="Evaluate" declaredBy="Box2D.Dynamics.Contacts::b2CircleContact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <method name="IsSolid" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Boolean"/>
        <variable name="m_node2" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <method name="Update" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <variable name="m_node1" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <variable name="m_prev" type="Box2D.Dynamics.Contacts::b2Contact"/>
        <variable name="m_shape1" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_toi" type="Number"/>
        <method name="GetManifoldCount" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="int"/>
        <variable name="m_restitution" type="Number"/>
        <method name="GetShape2" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_shape2" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_friction" type="Number"/>
        <variable name="m_flags" type="uint"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Dynamics.Contacts::b2Contact"/>
        <method name="GetShape1" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_manifoldCount" type="int"/>
        <variable name="m_next" type="Box2D.Dynamics.Contacts::b2Contact"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2RevoluteJoint" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <variable name="tImpulse" type="Box2D.Common.Math::b2Vec2"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2RevoluteJoint">
        <extendsClass type="Box2D.Dynamics.Joints::b2Joint"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <variable name="m_motorMass" type="Number"/>
        <variable name="m_pivotForce" type="Box2D.Common.Math::b2Vec2"/>
        <method name="SetMotorSpeed" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="GetJointSpeed" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Number"/>
        <variable name="m_limitPositionImpulse" type="Number"/>
        <method name="IsMotorEnabled" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Boolean"/>
        <variable name="m_pivotMass" type="Box2D.Common.Math::b2Mat22"/>
        <method name="GetReactionTorque" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Number"/>
        <variable name="m_localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_limitState" type="int"/>
        <method name="GetLowerLimit" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Number"/>
        <method name="SolveVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <method name="IsLimitEnabled" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Boolean"/>
        <method name="SetMaxMotorTorque" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="m_upperAngle" type="Number"/>
        <method name="EnableMotor" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
        </method>
        <variable name="m_enableMotor" type="Boolean"/>
        <method name="InitVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <method name="GetMotorTorque" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Number"/>
        <method name="SetLimits" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <method name="GetJointAngle" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Number"/>
        <variable name="m_motorForce" type="Number"/>
        <variable name="m_lowerAngle" type="Number"/>
        <method name="EnableLimit" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
        </method>
        <method name="GetAnchor1" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_referenceAngle" type="Number"/>
        <method name="GetAnchor2" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_enableLimit" type="Boolean"/>
        <method name="GetReactionForce" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="GetMotorSpeed" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Number"/>
        <variable name="m_limitForce" type="Number"/>
        <variable name="m_motorSpeed" type="Number"/>
        <variable name="m_localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <method name="SolvePositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Boolean"/>
        <method name="GetUpperLimit" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJoint" returnType="Number"/>
        <variable name="m_maxMotorTorque" type="Number"/>
        <variable name="m_prev" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_node2" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <method name="GetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="*"/>
        <variable name="m_inv_dt" type="Number"/>
        <method name="GetType" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <method name="GetBody2" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <variable name="m_userData" type="*"/>
        <variable name="m_type" type="int"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_islandFlag" type="Boolean"/>
        <method name="GetBody1" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <method name="InitPositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void"/>
        <variable name="m_collideConnected" type="Boolean"/>
        <variable name="m_body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_node1" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <variable name="m_next" type="Box2D.Dynamics.Joints::b2Joint"/>
      </factory>
    </type>
    <type name="Box2D.Collision.Shapes::b2PolygonDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Collision.Shapes::b2PolygonDef">
        <extendsClass type="Box2D.Collision.Shapes::b2ShapeDef"/>
        <extendsClass type="Object"/>
        <method name="SetAsBox" declaredBy="Box2D.Collision.Shapes::b2PolygonDef" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <variable name="vertices" type="Array"/>
        <method name="SetAsOrientedBox" declaredBy="Box2D.Collision.Shapes::b2PolygonDef" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2Vec2" optional="true"/>
          <parameter index="4" type="Number" optional="true"/>
        </method>
        <variable name="vertexCount" type="int"/>
        <variable name="userData" type="*"/>
        <variable name="density" type="Number"/>
        <variable name="isSensor" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="filter" type="Box2D.Collision.Shapes::b2FilterData"/>
        <variable name="restitution" type="Number"/>
        <variable name="friction" type="Number"/>
      </factory>
    </type>
    <type name="PBLabs.Animation::PointAnimator" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Animation::PointAnimator">
        <extendsClass type="PBLabs.Animation::Animator"/>
        <extendsClass type="flash.events::EventDispatcher"/>
        <extendsClass type="Object"/>
        <implementsInterface type="flash.events::IEventDispatcher"/>
        <method name="Reverse" declaredBy="PBLabs.Animation::Animator" returnType="void"/>
        <accessor name="IsAnimating" access="readonly" type="Boolean" declaredBy="PBLabs.Animation::Animator"/>
        <accessor name="StartValue" access="readwrite" type="*" declaredBy="PBLabs.Animation::Animator"/>
        <accessor name="CurrentValue" access="readonly" type="*" declaredBy="PBLabs.Animation::Animator"/>
        <method name="Reset" declaredBy="PBLabs.Animation::Animator" returnType="void"/>
        <accessor name="RepeatCount" access="readwrite" type="int" declaredBy="PBLabs.Animation::Animator"/>
        <method name="Play" declaredBy="PBLabs.Animation::Animator" returnType="void"/>
        <accessor name="Duration" access="readwrite" type="Number" declaredBy="PBLabs.Animation::Animator"/>
        <accessor name="Elapsed" access="readonly" type="Number" declaredBy="PBLabs.Animation::Animator"/>
        <accessor name="AnimationType" access="readwrite" type="PBLabs.Animation::AnimatorType" declaredBy="PBLabs.Animation::Animator"/>
        <method name="Stop" declaredBy="PBLabs.Animation::Animator" returnType="void"/>
        <accessor name="TargetValue" access="readwrite" type="*" declaredBy="PBLabs.Animation::Animator"/>
        <method name="Animate" declaredBy="PBLabs.Animation::Animator" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <accessor name="TotalRepeatCount" access="readonly" type="int" declaredBy="PBLabs.Animation::Animator"/>
        <method name="Finish" declaredBy="PBLabs.Animation::Animator" returnType="void"/>
        <method name="Start" declaredBy="PBLabs.Animation::Animator" returnType="void">
          <parameter index="1" type="*" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
          <parameter index="3" type="Number" optional="false"/>
          <parameter index="4" type="PBLabs.Animation::AnimatorType" optional="false"/>
          <parameter index="5" type="int" optional="true"/>
        </method>
        <method name="removeEventListener" declaredBy="flash.events::EventDispatcher" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Function" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
        </method>
        <method name="willTrigger" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="addEventListener" declaredBy="flash.events::EventDispatcher" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Function" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
          <parameter index="4" type="int" optional="true"/>
          <parameter index="5" type="Boolean" optional="true"/>
        </method>
        <method name="toString" declaredBy="flash.events::EventDispatcher" returnType="String"/>
        <method name="hasEventListener" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="dispatchEvent" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="flash.events::Event" optional="false"/>
        </method>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2PulleyJoint" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <constant name="b2_minPulleyLength" type="Number"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2PulleyJoint">
        <extendsClass type="Box2D.Dynamics.Joints::b2Joint"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <variable name="m_ratio" type="Number"/>
        <variable name="m_groundAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_u2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_u1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_ground" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_pulleyMass" type="Number"/>
        <variable name="m_constant" type="Number"/>
        <variable name="m_maxLength2" type="Number"/>
        <variable name="m_limitMass2" type="Number"/>
        <method name="GetLength2" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Number"/>
        <variable name="m_maxLength1" type="Number"/>
        <variable name="m_force" type="Number"/>
        <variable name="m_limitPositionImpulse1" type="Number"/>
        <method name="InitVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <variable name="m_limitPositionImpulse2" type="Number"/>
        <variable name="m_limitForce1" type="Number"/>
        <method name="SolveVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <variable name="m_positionImpulse" type="Number"/>
        <variable name="m_limitForce2" type="Number"/>
        <variable name="m_state" type="int"/>
        <method name="GetRatio" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Number"/>
        <method name="GetAnchor1" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="GetLength1" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Number"/>
        <method name="GetAnchor2" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="GetReactionTorque" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Number"/>
        <method name="GetReactionForce" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="GetGroundAnchor1" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_limitMass1" type="Number"/>
        <method name="GetGroundAnchor2" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_groundAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_limitState1" type="int"/>
        <method name="SolvePositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2PulleyJoint" returnType="Boolean"/>
        <variable name="m_limitState2" type="int"/>
        <variable name="m_localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_prev" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_node2" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <method name="GetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="*"/>
        <variable name="m_inv_dt" type="Number"/>
        <method name="GetType" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <method name="GetBody2" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <variable name="m_userData" type="*"/>
        <variable name="m_type" type="int"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_islandFlag" type="Boolean"/>
        <method name="GetBody1" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <method name="InitPositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void"/>
        <variable name="m_collideConnected" type="Boolean"/>
        <variable name="m_body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_node1" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <variable name="m_next" type="Box2D.Dynamics.Joints::b2Joint"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2PulleyJointDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2PulleyJointDef">
        <extendsClass type="Box2D.Dynamics.Joints::b2JointDef"/>
        <extendsClass type="Object"/>
        <variable name="length1" type="Number"/>
        <variable name="length2" type="Number"/>
        <variable name="localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <method name="Initialize" declaredBy="Box2D.Dynamics.Joints::b2PulleyJointDef" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="2" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="4" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="5" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="6" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="7" type="Number" optional="false"/>
        </method>
        <variable name="ratio" type="Number"/>
        <variable name="groundAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="maxLength1" type="Number"/>
        <variable name="groundAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="maxLength2" type="Number"/>
        <variable name="localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="collideConnected" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="userData" type="*"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::CellCountDivider" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::CellCountDivider">
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::ISpriteSheetDivider"/>
        <accessor name="OwningSheet" access="writeonly" type="PBLabs.Rendering2D::SpriteSheetComponent" declaredBy="PBLabs.Rendering2D::CellCountDivider"/>
        <method name="Clone" declaredBy="PBLabs.Rendering2D::CellCountDivider" returnType="PBLabs.Rendering2D::ISpriteSheetDivider"/>
        <accessor name="FrameCount" access="readonly" type="int" declaredBy="PBLabs.Rendering2D::CellCountDivider"/>
        <variable name="YCount" type="int"/>
        <method name="GetFrameArea" declaredBy="PBLabs.Rendering2D::CellCountDivider" returnType="flash.geom::Rectangle">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <variable name="XCount" type="int"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2RevoluteJointDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2RevoluteJointDef">
        <extendsClass type="Box2D.Dynamics.Joints::b2JointDef"/>
        <extendsClass type="Object"/>
        <variable name="motorSpeed" type="Number"/>
        <variable name="localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="enableMotor" type="Boolean"/>
        <variable name="lowerAngle" type="Number"/>
        <variable name="enableLimit" type="Boolean"/>
        <variable name="upperAngle" type="Number"/>
        <variable name="maxMotorTorque" type="Number"/>
        <method name="Initialize" declaredBy="Box2D.Dynamics.Joints::b2RevoluteJointDef" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="2" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <variable name="referenceAngle" type="Number"/>
        <variable name="localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="collideConnected" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="userData" type="*"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2MouseJoint" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2MouseJoint">
        <extendsClass type="Box2D.Dynamics.Joints::b2Joint"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <variable name="m_C" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_impulse" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_beta" type="Number"/>
        <variable name="m_localAnchor" type="Box2D.Common.Math::b2Vec2"/>
        <method name="GetAnchor1" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_maxForce" type="Number"/>
        <method name="GetAnchor2" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_target" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_gamma" type="Number"/>
        <method name="SolveVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <method name="InitVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <method name="SolvePositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="Boolean"/>
        <method name="GetReactionTorque" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="Number"/>
        <variable name="m_mass" type="Box2D.Common.Math::b2Mat22"/>
        <method name="SetTarget" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="void">
          <parameter index="1" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <method name="GetReactionForce" declaredBy="Box2D.Dynamics.Joints::b2MouseJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_prev" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_node2" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <method name="GetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="*"/>
        <variable name="m_inv_dt" type="Number"/>
        <method name="GetType" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <method name="GetBody2" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <variable name="m_userData" type="*"/>
        <variable name="m_type" type="int"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_islandFlag" type="Boolean"/>
        <method name="GetBody1" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <method name="InitPositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void"/>
        <variable name="m_collideConnected" type="Boolean"/>
        <variable name="m_body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_node1" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <variable name="m_next" type="Box2D.Dynamics.Joints::b2Joint"/>
      </factory>
    </type>
    <type name="Box2D.Collision.Shapes::b2PolygonShape" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <method name="ComputeOBB" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="void">
        <parameter index="1" type="Box2D.Collision::b2OBB" optional="false"/>
        <parameter index="2" type="Array" optional="false"/>
        <parameter index="3" type="int" optional="false"/>
      </method>
      <method name="ComputeCentroid" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Box2D.Common.Math::b2Vec2">
        <parameter index="1" type="Array" optional="false"/>
        <parameter index="2" type="int" optional="false"/>
      </method>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Collision.Shapes::b2PolygonShape">
        <extendsClass type="Box2D.Collision.Shapes::b2Shape"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <method name="ComputeSweptAABB" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2AABB" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <method name="TestPoint" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Boolean">
          <parameter index="1" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <method name="ComputeMass" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="void">
          <parameter index="1" type="Box2D.Collision.Shapes::b2MassData" optional="false"/>
        </method>
        <method name="GetVertexCount" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="int"/>
        <variable name="m_centroid" type="Box2D.Common.Math::b2Vec2"/>
        <method name="GetCoreVertices" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Array"/>
        <method name="TestSegment" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Boolean">
          <parameter index="1" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="2" type="Array" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="4" type="Box2D.Collision::b2Segment" optional="false"/>
          <parameter index="5" type="Number" optional="false"/>
        </method>
        <method name="GetFirstVertex" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Box2D.Common.Math::b2Vec2">
          <parameter index="1" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <method name="GetCentroid" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_obb" type="Box2D.Collision::b2OBB"/>
        <method name="GetOBB" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Box2D.Collision::b2OBB"/>
        <method name="GetNormals" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Array"/>
        <variable name="m_coreVertices" type="Array"/>
        <variable name="m_vertexCount" type="int"/>
        <method name="ComputeAABB" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2AABB" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <method name="Centroid" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Box2D.Common.Math::b2Vec2">
          <parameter index="1" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <variable name="m_vertices" type="Array"/>
        <method name="Support" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Box2D.Common.Math::b2Vec2">
          <parameter index="1" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="Number" optional="false"/>
        </method>
        <method name="GetVertices" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="Array"/>
        <method name="UpdateSweepRadius" declaredBy="Box2D.Collision.Shapes::b2PolygonShape" returnType="void">
          <parameter index="1" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <variable name="m_normals" type="Array"/>
        <method name="GetType" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <variable name="m_isSensor" type="Boolean"/>
        <variable name="m_type" type="int"/>
        <method name="GetFilterData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Box2D.Collision.Shapes::b2FilterData"/>
        <method name="RefilterProxy" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <variable name="m_restitution" type="Number"/>
        <method name="SetFilterData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision.Shapes::b2FilterData" optional="false"/>
        </method>
        <variable name="m_proxyId" type="uint"/>
        <variable name="m_userData" type="*"/>
        <method name="GetBody" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Box2D.Dynamics::b2Body"/>
        <method name="GetSweepRadius" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Number"/>
        <variable name="m_body" type="Box2D.Dynamics::b2Body"/>
        <method name="Synchronize" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Boolean">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <variable name="m_sweepRadius" type="Number"/>
        <method name="GetRestitution" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Number"/>
        <method name="CreateProxy" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <method name="IsSensor" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Boolean"/>
        <variable name="m_density" type="Number"/>
        <method name="GetNext" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <method name="GetUserData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="*"/>
        <method name="GetFriction" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Number"/>
        <variable name="m_friction" type="Number"/>
        <variable name="m_next" type="Box2D.Collision.Shapes::b2Shape"/>
        <method name="DestroyProxy" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
        </method>
        <variable name="m_filter" type="Box2D.Collision.Shapes::b2FilterData"/>
      </factory>
    </type>
    <type name="PBLabs.Box2D::ContactFilter" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Box2D::ContactFilter">
        <extendsClass type="Box2D.Dynamics::b2ContactFilter"/>
        <extendsClass type="Object"/>
        <method name="ShouldCollide" declaredBy="PBLabs.Box2D::ContactFilter" returnType="Boolean">
          <parameter index="1" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
          <parameter index="2" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
        </method>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D::FixedSizeDivider" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D::FixedSizeDivider">
        <extendsClass type="Object"/>
        <implementsInterface type="PBLabs.Rendering2D::ISpriteSheetDivider"/>
        <variable name="Height" type="int"/>
        <accessor name="FrameCount" access="readonly" type="int" declaredBy="PBLabs.Rendering2D::FixedSizeDivider"/>
        <accessor name="OwningSheet" access="writeonly" type="PBLabs.Rendering2D::SpriteSheetComponent" declaredBy="PBLabs.Rendering2D::FixedSizeDivider"/>
        <method name="GetFrameArea" declaredBy="PBLabs.Rendering2D::FixedSizeDivider" returnType="flash.geom::Rectangle">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <method name="Clone" declaredBy="PBLabs.Rendering2D::FixedSizeDivider" returnType="PBLabs.Rendering2D::ISpriteSheetDivider"/>
        <variable name="Width" type="int"/>
        <variable name="_Garbage" type="Number"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D.UI::FlexSceneView" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D.UI::FlexSceneView">
        <extendsClass type="mx.core::Container"/>
        <extendsClass type="mx.core::UIComponent"/>
        <extendsClass type="mx.core::FlexSprite"/>
        <extendsClass type="flash.display::Sprite"/>
        <extendsClass type="flash.display::DisplayObjectContainer"/>
        <extendsClass type="flash.display::InteractiveObject"/>
        <extendsClass type="flash.display::DisplayObject"/>
        <extendsClass type="flash.events::EventDispatcher"/>
        <extendsClass type="Object"/>
        <implementsInterface type="mx.core::IStateClient"/>
        <implementsInterface type="mx.core::IDataRenderer"/>
        <implementsInterface type="mx.core::IUID"/>
        <implementsInterface type="mx.core::IUIComponent"/>
        <implementsInterface type="mx.core::IInvalidating"/>
        <implementsInterface type="mx.core::IPropertyChangeNotifier"/>
        <implementsInterface type="flash.display::IBitmapDrawable"/>
        <implementsInterface type="mx.validators::IValidatorListener"/>
        <implementsInterface type="mx.core::IDeferredInstantiationUIComponent"/>
        <implementsInterface type="mx.controls.listClasses::IListItemRenderer"/>
        <implementsInterface type="mx.core::IContainer"/>
        <implementsInterface type="mx.core::IRawChildrenContainer"/>
        <implementsInterface type="mx.managers::IToolTipManagerClient"/>
        <implementsInterface type="mx.automation::IAutomationObject"/>
        <implementsInterface type="mx.core::IConstraintClient"/>
        <implementsInterface type="PBLabs.Rendering2D.UI::IUITarget"/>
        <implementsInterface type="mx.core::IFlexDisplayObject"/>
        <implementsInterface type="mx.core::IChildList"/>
        <implementsInterface type="mx.styles::IStyleClient"/>
        <implementsInterface type="mx.core::IFlexModule"/>
        <implementsInterface type="mx.core::IRepeaterClient"/>
        <implementsInterface type="flash.events::IEventDispatcher"/>
        <implementsInterface type="mx.managers::ILayoutManagerClient"/>
        <implementsInterface type="mx.styles::ISimpleStyleClient"/>
        <implementsInterface type="mx.managers::IFocusManagerContainer"/>
        <method name="initialize" declaredBy="PBLabs.Rendering2D.UI::FlexSceneView" returnType="void"/>
        <method name="ClearDisplayObjects" declaredBy="PBLabs.Rendering2D.UI::FlexSceneView" returnType="void"/>
        <method name="AddDisplayObject" declaredBy="PBLabs.Rendering2D.UI::FlexSceneView" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="horizontalPageScrollSize" access="readwrite" type="Number" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="horizontalPageScrollSizeChanged"/>
          </metadata>
        </accessor>
        <method name="getChildren" declaredBy="mx.core::Container" returnType="Array">
          <metadata name="Bindable">
            <arg key="" value="childrenChanged"/>
          </metadata>
        </method>
        <accessor name="autoLayout" access="readwrite" type="Boolean" declaredBy="mx.core::Container"/>
        <accessor name="label" access="readwrite" type="String" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="labelChanged"/>
          </metadata>
        </accessor>
        <method name="contentToLocal" declaredBy="mx.core::Container" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <method name="removeAllChildren" declaredBy="mx.core::Container" returnType="void"/>
        <method name="getChildByName" declaredBy="mx.core::Container" returnType="flash.display::DisplayObject">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="removeChildAt" declaredBy="mx.core::Container" returnType="flash.display::DisplayObject">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <method name="notifyStyleChangeInChildren" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Boolean" optional="false"/>
        </method>
        <method name="getChildIndex" declaredBy="mx.core::Container" returnType="int">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="addChildAt" declaredBy="mx.core::Container" returnType="flash.display::DisplayObject">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
          <parameter index="2" type="int" optional="false"/>
        </method>
        <accessor name="numChildren" access="readonly" type="int" declaredBy="mx.core::Container"/>
        <accessor name="maxHorizontalScrollPosition" access="readonly" type="Number" declaredBy="mx.core::Container"/>
        <method name="removeChild" declaredBy="mx.core::Container" returnType="flash.display::DisplayObject">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="getChildAt" declaredBy="mx.core::Container" returnType="flash.display::DisplayObject">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <method name="setChildIndex" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
          <parameter index="2" type="int" optional="false"/>
        </method>
        <method name="contains" declaredBy="mx.core::Container" returnType="Boolean">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="addChild" declaredBy="mx.core::Container" returnType="flash.display::DisplayObject">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="enabled" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="enabledChanged"/>
          </metadata>
        </accessor>
        <method name="globalToContent" declaredBy="mx.core::Container" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="creatingContentPane" access="readwrite" type="Boolean" declaredBy="mx.core::Container"/>
        <accessor name="horizontalScrollPosition" access="readwrite" type="Number" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="viewChanged"/>
          </metadata>
          <metadata name="Bindable">
            <arg key="" value="scroll"/>
          </metadata>
        </accessor>
        <accessor name="viewMetrics" access="readonly" type="mx.core::EdgeMetrics" declaredBy="mx.core::Container"/>
        <accessor name="baselinePosition" access="readonly" type="Number" declaredBy="mx.core::Container"/>
        <accessor name="verticalScrollPosition" access="readwrite" type="Number" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="viewChanged"/>
          </metadata>
          <metadata name="Bindable">
            <arg key="" value="scroll"/>
          </metadata>
        </accessor>
        <accessor name="verticalScrollPolicy" access="readwrite" type="String" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="verticalScrollPolicyChanged"/>
          </metadata>
        </accessor>
        <accessor name="clipContent" access="readwrite" type="Boolean" declaredBy="mx.core::Container"/>
        <accessor name="data" access="readwrite" type="Object" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="dataChange"/>
          </metadata>
        </accessor>
        <accessor name="childDescriptors" access="readonly" type="Array" declaredBy="mx.core::Container"/>
        <method name="contentToGlobal" declaredBy="mx.core::Container" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="horizontalScrollBar" access="readwrite" type="mx.controls.scrollClasses::ScrollBar" declaredBy="mx.core::Container"/>
        <method name="executeChildBindings" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
        </method>
        <method name="styleChanged" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <accessor name="creationIndex" access="readwrite" type="int" declaredBy="mx.core::Container"/>
        <accessor name="icon" access="readwrite" type="Class" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="iconChanged"/>
          </metadata>
        </accessor>
        <accessor name="verticalScrollBar" access="readwrite" type="mx.controls.scrollClasses::ScrollBar" declaredBy="mx.core::Container"/>
        <method name="createComponentFromDescriptor" declaredBy="mx.core::Container" returnType="mx.core::IFlexDisplayObject">
          <parameter index="1" type="mx.core::ComponentDescriptor" optional="false"/>
          <parameter index="2" type="Boolean" optional="false"/>
        </method>
        <method name="executeBindings" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="Boolean" optional="true"/>
        </method>
        <method name="addEventListener" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Function" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
          <parameter index="4" type="int" optional="true"/>
          <parameter index="5" type="Boolean" optional="true"/>
        </method>
        <method name="removeEventListener" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Function" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
        </method>
        <accessor name="verticalLineScrollSize" access="readwrite" type="Number" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="verticalLineScrollSizeChanged"/>
          </metadata>
        </accessor>
        <accessor name="horizontalScrollPolicy" access="readwrite" type="String" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="horizontalScrollPolicyChanged"/>
          </metadata>
        </accessor>
        <method name="validateDisplayList" declaredBy="mx.core::Container" returnType="void"/>
        <method name="validateSize" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="Boolean" optional="true"/>
        </method>
        <method name="finishPrint" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="Object" optional="false"/>
          <parameter index="2" type="mx.core::IFlexDisplayObject" optional="false"/>
        </method>
        <accessor name="focusPane" access="readwrite" type="flash.display::Sprite" declaredBy="mx.core::Container"/>
        <accessor name="maxVerticalScrollPosition" access="readonly" type="Number" declaredBy="mx.core::Container"/>
        <accessor name="contentMouseX" access="readonly" type="Number" declaredBy="mx.core::Container"/>
        <accessor name="contentMouseY" access="readonly" type="Number" declaredBy="mx.core::Container"/>
        <accessor name="horizontalLineScrollSize" access="readwrite" type="Number" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="horizontalLineScrollSizeChanged"/>
          </metadata>
        </accessor>
        <accessor name="rawChildren" access="readonly" type="mx.core::IChildList" declaredBy="mx.core::Container"/>
        <method name="prepareToPrint" declaredBy="mx.core::Container" returnType="Object">
          <parameter index="1" type="mx.core::IFlexDisplayObject" optional="false"/>
        </method>
        <accessor name="verticalPageScrollSize" access="readwrite" type="Number" declaredBy="mx.core::Container">
          <metadata name="Bindable">
            <arg key="" value="verticalPageScrollSizeChanged"/>
          </metadata>
        </accessor>
        <method name="localToContent" declaredBy="mx.core::Container" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="creationPolicy" access="readwrite" type="String" declaredBy="mx.core::Container"/>
        <accessor name="borderMetrics" access="readonly" type="mx.core::EdgeMetrics" declaredBy="mx.core::Container"/>
        <method name="regenerateStyleCache" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
        </method>
        <accessor name="viewMetricsAndPadding" access="readonly" type="mx.core::EdgeMetrics" declaredBy="mx.core::Container"/>
        <accessor name="defaultButton" access="readwrite" type="mx.core::IFlexDisplayObject" declaredBy="mx.core::Container"/>
        <method name="createComponentsFromDescriptors" declaredBy="mx.core::Container" returnType="void">
          <parameter index="1" type="Boolean" optional="true"/>
        </method>
        <accessor name="measuredWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent"/>
        <accessor name="measuredHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent"/>
        <method name="setActualSize" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <method name="setFocus" declaredBy="mx.core::UIComponent" returnType="void"/>
        <method name="move" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <accessor name="scaleX" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="scaleXChanged"/>
          </metadata>
        </accessor>
        <method name="setStyle" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
        </method>
        <accessor name="nestLevel" access="readwrite" type="int" declaredBy="mx.core::UIComponent"/>
        <accessor name="scaleY" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="scaleYChanged"/>
          </metadata>
        </accessor>
        <method name="getStyle" declaredBy="mx.core::UIComponent" returnType="*">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="getExplicitOrMeasuredHeight" declaredBy="mx.core::UIComponent" returnType="Number"/>
        <method name="validateNow" declaredBy="mx.core::UIComponent" returnType="void"/>
        <method name="invalidateDisplayList" declaredBy="mx.core::UIComponent" returnType="void"/>
        <accessor name="owner" access="readwrite" type="flash.display::DisplayObjectContainer" declaredBy="mx.core::UIComponent"/>
        <method name="invalidateProperties" declaredBy="mx.core::UIComponent" returnType="void"/>
        <accessor name="moduleFactory" access="readwrite" type="mx.core::IFlexModuleFactory" declaredBy="mx.core::UIComponent"/>
        <method name="invalidateSize" declaredBy="mx.core::UIComponent" returnType="void"/>
        <accessor name="id" access="readwrite" type="String" declaredBy="mx.core::UIComponent"/>
        <accessor name="enabled" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="enabledChanged"/>
          </metadata>
        </accessor>
        <accessor name="visible" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="show"/>
          </metadata>
          <metadata name="Bindable">
            <arg key="" value="hide"/>
          </metadata>
        </accessor>
        <accessor name="instanceIndices" access="readwrite" type="Array" declaredBy="mx.core::UIComponent"/>
        <accessor name="isDocument" access="readonly" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="repeaters" access="readwrite" type="Array" declaredBy="mx.core::UIComponent"/>
        <method name="initializeRepeaterArrays" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="mx.core::IRepeaterClient" optional="false"/>
        </method>
        <accessor name="repeaterIndices" access="readwrite" type="Array" declaredBy="mx.core::UIComponent"/>
        <accessor name="explicitHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitHeightChanged"/>
          </metadata>
        </accessor>
        <method name="callLater" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="Function" optional="false"/>
          <parameter index="2" type="Array" optional="true"/>
        </method>
        <method name="getExplicitOrMeasuredWidth" declaredBy="mx.core::UIComponent" returnType="Number"/>
        <method name="drawFocus" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
        </method>
        <accessor name="focusEnabled" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="mouseFocusEnabled" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="height" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="heightChanged"/>
          </metadata>
        </accessor>
        <accessor name="cacheAsBitmap" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObject"/>
        <accessor name="mouseX" access="readonly" type="Number" declaredBy="mx.core::UIComponent"/>
        <accessor name="mouseY" access="readonly" type="Number" declaredBy="mx.core::UIComponent"/>
        <method name="stylesInitialized" declaredBy="mx.core::UIComponent" returnType="void"/>
        <method name="dispatchEvent" declaredBy="mx.core::UIComponent" returnType="Boolean">
          <parameter index="1" type="flash.events::Event" optional="false"/>
        </method>
        <accessor name="initialized" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="filters" access="readwrite" type="Array" declaredBy="mx.core::UIComponent"/>
        <method name="drawRoundRect" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="Number" optional="false"/>
          <parameter index="4" type="Number" optional="false"/>
          <parameter index="5" type="Object" optional="true"/>
          <parameter index="6" type="Object" optional="true"/>
          <parameter index="7" type="Object" optional="true"/>
          <parameter index="8" type="Object" optional="true"/>
          <parameter index="9" type="String" optional="true"/>
          <parameter index="10" type="Array" optional="true"/>
          <parameter index="11" type="Object" optional="true"/>
        </method>
        <accessor name="doubleClickEnabled" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="document" access="readwrite" type="Object" declaredBy="mx.core::UIComponent"/>
        <method name="measureText" declaredBy="mx.core::UIComponent" returnType="flash.text::TextLineMetrics">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="stopDrag" declaredBy="mx.core::UIComponent" returnType="void"/>
        <method name="measureHTMLText" declaredBy="mx.core::UIComponent" returnType="flash.text::TextLineMetrics">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="determineTextFormatFromStyles" declaredBy="mx.core::UIComponent" returnType="mx.core::UITextFormat"/>
        <accessor name="activeEffects" access="readonly" type="Array" declaredBy="mx.core::UIComponent"/>
        <accessor name="width" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="widthChanged"/>
          </metadata>
        </accessor>
        <method name="endEffectsStarted" declaredBy="mx.core::UIComponent" returnType="void"/>
        <accessor name="screen" access="readonly" type="flash.geom::Rectangle" declaredBy="mx.core::UIComponent"/>
        <accessor name="cursorManager" access="readonly" type="mx.managers::ICursorManager" declaredBy="mx.core::UIComponent"/>
        <accessor name="repeater" access="readonly" type="mx.core::IRepeater" declaredBy="mx.core::UIComponent"/>
        <method name="getRepeaterItem" declaredBy="mx.core::UIComponent" returnType="Object">
          <parameter index="1" type="int" optional="true"/>
        </method>
        <accessor name="instanceIndex" access="readonly" type="int" declaredBy="mx.core::UIComponent"/>
        <method name="effectFinished" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="mx.effects::IEffectInstance" optional="false"/>
        </method>
        <accessor name="alpha" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject">
          <metadata name="Bindable">
            <arg key="" value="alphaChanged"/>
          </metadata>
        </accessor>
        <accessor name="y" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="yChanged"/>
          </metadata>
        </accessor>
        <accessor name="x" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="xChanged"/>
          </metadata>
        </accessor>
        <accessor name="parent" access="readonly" type="flash.display::DisplayObjectContainer" declaredBy="mx.core::UIComponent"/>
        <accessor name="parentDocument" access="readonly" type="Object" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="initialize"/>
          </metadata>
        </accessor>
        <accessor name="isPopUp" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="explicitMinHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explictMinHeightChanged"/>
          </metadata>
        </accessor>
        <accessor name="percentWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="resize"/>
          </metadata>
        </accessor>
        <accessor name="percentHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="resize"/>
          </metadata>
        </accessor>
        <accessor name="explicitWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitWidthChanged"/>
          </metadata>
        </accessor>
        <accessor name="toolTip" access="readwrite" type="String" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="toolTipChanged"/>
          </metadata>
        </accessor>
        <method name="owns" declaredBy="mx.core::UIComponent" returnType="Boolean">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="minWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitMinWidthChanged"/>
          </metadata>
        </accessor>
        <accessor name="maxWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitMaxWidthChanged"/>
          </metadata>
        </accessor>
        <accessor name="uid" access="readwrite" type="String" declaredBy="mx.core::UIComponent"/>
        <accessor name="explicitMaxWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitMaxWidthChanged"/>
          </metadata>
        </accessor>
        <accessor name="minHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitMinHeightChanged"/>
          </metadata>
        </accessor>
        <accessor name="explicitMaxHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitMaxHeightChanged"/>
          </metadata>
        </accessor>
        <method name="createAutomationIDPart" declaredBy="mx.core::UIComponent" returnType="Object">
          <parameter index="1" type="mx.automation::IAutomationObject" optional="false"/>
        </method>
        <accessor name="automationName" access="readwrite" type="String" declaredBy="mx.core::UIComponent"/>
        <accessor name="showInAutomationHierarchy" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="tweeningProperties" access="readwrite" type="Array" declaredBy="mx.core::UIComponent"/>
        <method name="getAutomationChildAt" declaredBy="mx.core::UIComponent" returnType="mx.automation::IAutomationObject">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <accessor name="systemManager" access="readwrite" type="mx.managers::ISystemManager" declaredBy="mx.core::UIComponent"/>
        <accessor name="explicitMinWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitMinWidthChanged"/>
          </metadata>
        </accessor>
        <accessor name="includeInLayout" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="includeInLayoutChanged"/>
          </metadata>
        </accessor>
        <method name="replayAutomatableEvent" declaredBy="mx.core::UIComponent" returnType="Boolean">
          <parameter index="1" type="flash.events::Event" optional="false"/>
        </method>
        <method name="resolveAutomationIDPart" declaredBy="mx.core::UIComponent" returnType="Array">
          <parameter index="1" type="Object" optional="false"/>
        </method>
        <variable name="transitions" type="Array"/>
        <method name="setVisible" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
          <parameter index="2" type="Boolean" optional="true"/>
        </method>
        <method name="effectStarted" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="mx.effects::IEffectInstance" optional="false"/>
        </method>
        <accessor name="measuredMinHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent"/>
        <accessor name="numAutomationChildren" access="readonly" type="int" declaredBy="mx.core::UIComponent"/>
        <accessor name="focusManager" access="readwrite" type="mx.managers::IFocusManager" declaredBy="mx.core::UIComponent"/>
        <accessor name="automationValue" access="readonly" type="Array" declaredBy="mx.core::UIComponent"/>
        <accessor name="className" access="readonly" type="String" declaredBy="mx.core::UIComponent"/>
        <accessor name="maxHeight" access="readwrite" type="Number" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="explicitMaxHeightChanged"/>
          </metadata>
        </accessor>
        <accessor name="measuredMinWidth" access="readwrite" type="Number" declaredBy="mx.core::UIComponent"/>
        <accessor name="currentState" access="readwrite" type="String" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="currentStateChange"/>
          </metadata>
        </accessor>
        <method name="getClassStyleDeclarations" declaredBy="mx.core::UIComponent" returnType="Array"/>
        <accessor name="automationDelegate" access="readwrite" type="Object" declaredBy="mx.core::UIComponent"/>
        <accessor name="styleName" access="readwrite" type="Object" declaredBy="mx.core::UIComponent"/>
        <accessor name="inheritingStyles" access="readwrite" type="Object" declaredBy="mx.core::UIComponent"/>
        <accessor name="automationTabularData" access="readonly" type="Object" declaredBy="mx.core::UIComponent"/>
        <method name="parentChanged" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="flash.display::DisplayObjectContainer" optional="false"/>
        </method>
        <accessor name="cacheHeuristic" access="writeonly" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <accessor name="nonInheritingStyles" access="readwrite" type="Object" declaredBy="mx.core::UIComponent"/>
        <method name="registerEffects" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="Array" optional="false"/>
        </method>
        <method name="deleteReferenceOnParentDocument" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="mx.core::IFlexDisplayObject" optional="false"/>
        </method>
        <accessor name="flexContextMenu" access="readwrite" type="mx.controls::IFlexContextMenu" declaredBy="mx.core::UIComponent"/>
        <method name="createReferenceOnParentDocument" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="mx.core::IFlexDisplayObject" optional="false"/>
        </method>
        <method name="clearStyle" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <accessor name="descriptor" access="readwrite" type="mx.core::UIComponentDescriptor" declaredBy="mx.core::UIComponent"/>
        <accessor name="errorString" access="readwrite" type="String" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="errorStringChanged"/>
          </metadata>
        </accessor>
        <method name="validateProperties" declaredBy="mx.core::UIComponent" returnType="void"/>
        <accessor name="validationSubField" access="readwrite" type="String" declaredBy="mx.core::UIComponent"/>
        <accessor name="cachePolicy" access="readwrite" type="String" declaredBy="mx.core::UIComponent"/>
        <method name="validationResultHandler" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="mx.events::ValidationResultEvent" optional="false"/>
        </method>
        <accessor name="styleDeclaration" access="readwrite" type="mx.styles::CSSStyleDeclaration" declaredBy="mx.core::UIComponent"/>
        <accessor name="processedDescriptors" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <method name="setConstraintValue" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
        </method>
        <variable name="states" type="Array"/>
        <accessor name="updateCompletePendingFlag" access="readwrite" type="Boolean" declaredBy="mx.core::UIComponent"/>
        <method name="getConstraintValue" declaredBy="mx.core::UIComponent" returnType="*">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <accessor name="parentApplication" access="readonly" type="Object" declaredBy="mx.core::UIComponent">
          <metadata name="Bindable">
            <arg key="" value="initialize"/>
          </metadata>
        </accessor>
        <method name="verticalGradientMatrix" declaredBy="mx.core::UIComponent" returnType="flash.geom::Matrix">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="Number" optional="false"/>
          <parameter index="4" type="Number" optional="false"/>
        </method>
        <method name="setCurrentState" declaredBy="mx.core::UIComponent" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Boolean" optional="true"/>
        </method>
        <accessor name="repeaterIndex" access="readonly" type="int" declaredBy="mx.core::UIComponent"/>
        <method name="getVisibleRect" declaredBy="mx.core::UIComponent" returnType="flash.geom::Rectangle">
          <parameter index="1" type="flash.display::DisplayObject" optional="true"/>
        </method>
        <method name="horizontalGradientMatrix" declaredBy="mx.core::UIComponent" returnType="flash.geom::Matrix">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="Number" optional="false"/>
          <parameter index="4" type="Number" optional="false"/>
        </method>
        <method name="getFocus" declaredBy="mx.core::UIComponent" returnType="flash.display::InteractiveObject"/>
        <method name="hasFontContextChanged" declaredBy="mx.core::UIComponent" returnType="Boolean"/>
        <method name="toString" declaredBy="mx.core::FlexSprite" returnType="String"/>
        <accessor name="soundTransform" access="readwrite" type="flash.media::SoundTransform" declaredBy="flash.display::Sprite"/>
        <method name="startDrag" declaredBy="flash.display::Sprite" returnType="void">
          <parameter index="1" type="Boolean" optional="true"/>
          <parameter index="2" type="flash.geom::Rectangle" optional="true"/>
        </method>
        <accessor name="buttonMode" access="readwrite" type="Boolean" declaredBy="flash.display::Sprite"/>
        <accessor name="graphics" access="readonly" type="flash.display::Graphics" declaredBy="flash.display::Sprite"/>
        <accessor name="dropTarget" access="readonly" type="flash.display::DisplayObject" declaredBy="flash.display::Sprite"/>
        <accessor name="hitArea" access="readwrite" type="flash.display::Sprite" declaredBy="flash.display::Sprite"/>
        <accessor name="useHandCursor" access="readwrite" type="Boolean" declaredBy="flash.display::Sprite"/>
        <accessor name="tabChildren" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObjectContainer"/>
        <method name="areInaccessibleObjectsUnderPoint" declaredBy="flash.display::DisplayObjectContainer" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="mouseChildren" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObjectContainer"/>
        <accessor name="textSnapshot" access="readonly" type="flash.text::TextSnapshot" declaredBy="flash.display::DisplayObjectContainer"/>
        <method name="swapChildrenAt" declaredBy="flash.display::DisplayObjectContainer" returnType="void">
          <parameter index="1" type="int" optional="false"/>
          <parameter index="2" type="int" optional="false"/>
        </method>
        <method name="swapChildren" declaredBy="flash.display::DisplayObjectContainer" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
          <parameter index="2" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="getObjectsUnderPoint" declaredBy="flash.display::DisplayObjectContainer" returnType="Array">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="contextMenu" access="readwrite" type="flash.ui::ContextMenu" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="tabEnabled" access="readwrite" type="Boolean" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="mouseEnabled" access="readwrite" type="Boolean" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="tabIndex" access="readwrite" type="int" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="accessibilityImplementation" access="readwrite" type="flash.accessibility::AccessibilityImplementation" declaredBy="flash.display::InteractiveObject">
          <metadata name="Inspectable">
            <arg key="environment" value="none"/>
          </metadata>
        </accessor>
        <accessor name="focusRect" access="readwrite" type="Object" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="accessibilityProperties" access="readwrite" type="flash.accessibility::AccessibilityProperties" declaredBy="flash.display::DisplayObject"/>
        <accessor name="scrollRect" access="readwrite" type="flash.geom::Rectangle" declaredBy="flash.display::DisplayObject"/>
        <method name="getBounds" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Rectangle">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="alpha" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject">
          <metadata name="Bindable">
            <arg key="" value="alphaChanged"/>
          </metadata>
        </accessor>
        <accessor name="opaqueBackground" access="readwrite" type="Object" declaredBy="flash.display::DisplayObject"/>
        <accessor name="cacheAsBitmap" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObject"/>
        <method name="hitTestPoint" declaredBy="flash.display::DisplayObject" returnType="Boolean">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
        </method>
        <accessor name="mask" access="readwrite" type="flash.display::DisplayObject" declaredBy="flash.display::DisplayObject"/>
        <method name="getRect" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Rectangle">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="rotation" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject"/>
        <method name="localToGlobal" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="name" access="readwrite" type="String" declaredBy="flash.display::DisplayObject"/>
        <accessor name="transform" access="readwrite" type="flash.geom::Transform" declaredBy="flash.display::DisplayObject"/>
        <accessor name="blendMode" access="readwrite" type="String" declaredBy="flash.display::DisplayObject"/>
        <method name="globalToLocal" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="loaderInfo" access="readonly" type="flash.display::LoaderInfo" declaredBy="flash.display::DisplayObject"/>
        <accessor name="scale9Grid" access="readwrite" type="flash.geom::Rectangle" declaredBy="flash.display::DisplayObject"/>
        <accessor name="root" access="readonly" type="flash.display::DisplayObject" declaredBy="flash.display::DisplayObject"/>
        <accessor name="stage" access="readonly" type="flash.display::Stage" declaredBy="flash.display::DisplayObject"/>
        <method name="hitTestObject" declaredBy="flash.display::DisplayObject" returnType="Boolean">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="willTrigger" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="hasEventListener" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="String" optional="false"/>
        </method>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2MouseJointDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2MouseJointDef">
        <extendsClass type="Box2D.Dynamics.Joints::b2JointDef"/>
        <extendsClass type="Object"/>
        <variable name="timeStep" type="Number"/>
        <variable name="dampingRatio" type="Number"/>
        <variable name="frequencyHz" type="Number"/>
        <variable name="target" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="maxForce" type="Number"/>
        <variable name="body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="collideConnected" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="userData" type="*"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2DistanceJointDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2DistanceJointDef">
        <extendsClass type="Box2D.Dynamics.Joints::b2JointDef"/>
        <extendsClass type="Object"/>
        <variable name="localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="dampingRatio" type="Number"/>
        <variable name="localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <method name="Initialize" declaredBy="Box2D.Dynamics.Joints::b2DistanceJointDef" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="2" type="Box2D.Dynamics::b2Body" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="4" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <variable name="frequencyHz" type="Number"/>
        <variable name="length" type="Number"/>
        <variable name="body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="collideConnected" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="userData" type="*"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics::b2ContactManager" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics::b2ContactManager">
        <extendsClass type="Box2D.Collision::b2PairCallback"/>
        <extendsClass type="Object"/>
        <variable name="m_world" type="Box2D.Dynamics::b2World"/>
        <method name="Destroy" declaredBy="Box2D.Dynamics::b2ContactManager" returnType="void">
          <parameter index="1" type="Box2D.Dynamics.Contacts::b2Contact" optional="false"/>
        </method>
        <method name="Collide" declaredBy="Box2D.Dynamics::b2ContactManager" returnType="void"/>
        <method name="PairAdded" declaredBy="Box2D.Dynamics::b2ContactManager" returnType="*">
          <parameter index="1" type="*" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
        </method>
        <variable name="m_destroyImmediate" type="Boolean"/>
        <variable name="m_nullContact" type="Box2D.Dynamics.Contacts::b2NullContact"/>
        <method name="PairRemoved" declaredBy="Box2D.Dynamics::b2ContactManager" returnType="void">
          <parameter index="1" type="*" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
          <parameter index="3" type="*" optional="false"/>
        </method>
      </factory>
    </type>
    <type name="flash.geom::Point" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <method name="interpolate" declaredBy="flash.geom::Point" returnType="flash.geom::Point">
        <parameter index="1" type="flash.geom::Point" optional="false"/>
        <parameter index="2" type="flash.geom::Point" optional="false"/>
        <parameter index="3" type="Number" optional="false"/>
      </method>
      <method name="polar" declaredBy="flash.geom::Point" returnType="flash.geom::Point">
        <parameter index="1" type="Number" optional="false"/>
        <parameter index="2" type="Number" optional="false"/>
      </method>
      <method name="distance" declaredBy="flash.geom::Point" returnType="Number">
        <parameter index="1" type="flash.geom::Point" optional="false"/>
        <parameter index="2" type="flash.geom::Point" optional="false"/>
      </method>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="flash.geom::Point">
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="Number" optional="true"/>
          <parameter index="2" type="Number" optional="true"/>
        </constructor>
        <method name="normalize" declaredBy="flash.geom::Point" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <method name="equals" declaredBy="flash.geom::Point" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <variable name="y" type="Number"/>
        <method name="toString" declaredBy="flash.geom::Point" returnType="String"/>
        <method name="subtract" declaredBy="flash.geom::Point" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="length" access="readonly" type="Number" declaredBy="flash.geom::Point"/>
        <method name="offset" declaredBy="flash.geom::Point" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <method name="add" declaredBy="flash.geom::Point" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <method name="clone" declaredBy="flash.geom::Point" returnType="flash.geom::Point"/>
        <variable name="x" type="Number"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Contacts::b2NullContact" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Contacts::b2NullContact">
        <extendsClass type="Box2D.Dynamics.Contacts::b2Contact"/>
        <extendsClass type="Object"/>
        <method name="Evaluate" declaredBy="Box2D.Dynamics.Contacts::b2NullContact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <method name="GetManifolds" declaredBy="Box2D.Dynamics.Contacts::b2NullContact" returnType="Array"/>
        <method name="IsSolid" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Boolean"/>
        <variable name="m_node2" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <method name="Update" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <variable name="m_node1" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <variable name="m_prev" type="Box2D.Dynamics.Contacts::b2Contact"/>
        <variable name="m_shape1" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_toi" type="Number"/>
        <method name="GetManifoldCount" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="int"/>
        <variable name="m_restitution" type="Number"/>
        <method name="GetShape2" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_shape2" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_friction" type="Number"/>
        <variable name="m_flags" type="uint"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Dynamics.Contacts::b2Contact"/>
        <method name="GetShape1" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_manifoldCount" type="int"/>
        <variable name="m_next" type="Box2D.Dynamics.Contacts::b2Contact"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2PrismaticJoint" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2PrismaticJoint">
        <extendsClass type="Box2D.Dynamics.Joints::b2Joint"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <variable name="m_motorMass" type="Number"/>
        <method name="SetMaxMotorForce" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="m_maxMotorForce" type="Number"/>
        <method name="GetJointSpeed" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Number"/>
        <variable name="m_localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <method name="GetLowerLimit" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Number"/>
        <variable name="m_motorSpeed" type="Number"/>
        <method name="SetMotorSpeed" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
        </method>
        <variable name="m_localXAxis1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_enableMotor" type="Boolean"/>
        <variable name="m_upperTranslation" type="Number"/>
        <method name="SolveVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <method name="IsLimitEnabled" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Boolean"/>
        <variable name="m_limitState" type="int"/>
        <variable name="m_refAngle" type="Number"/>
        <method name="GetReactionTorque" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Number"/>
        <variable name="m_linearJacobian" type="Box2D.Dynamics.Joints::b2Jacobian"/>
        <method name="EnableMotor" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
        </method>
        <variable name="m_torque" type="Number"/>
        <method name="IsMotorEnabled" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Boolean"/>
        <method name="InitVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <variable name="m_motorJacobian" type="Box2D.Dynamics.Joints::b2Jacobian"/>
        <variable name="m_localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_force" type="Number"/>
        <method name="GetJointTranslation" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Number"/>
        <method name="GetMotorForce" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Number"/>
        <variable name="m_motorForce" type="Number"/>
        <method name="EnableLimit" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="void">
          <parameter index="1" type="Boolean" optional="false"/>
        </method>
        <method name="GetAnchor1" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="SetLimits" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <variable name="m_limitPositionImpulse" type="Number"/>
        <method name="GetAnchor2" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_enableLimit" type="Boolean"/>
        <variable name="m_angularMass" type="Number"/>
        <variable name="m_linearMass" type="Number"/>
        <method name="GetMotorSpeed" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Number"/>
        <variable name="m_limitForce" type="Number"/>
        <method name="GetReactionForce" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_lowerTranslation" type="Number"/>
        <method name="SolvePositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Boolean"/>
        <method name="GetUpperLimit" declaredBy="Box2D.Dynamics.Joints::b2PrismaticJoint" returnType="Number"/>
        <variable name="m_localYAxis1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_prev" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_node2" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <method name="GetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="*"/>
        <variable name="m_inv_dt" type="Number"/>
        <method name="GetType" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <method name="GetBody2" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <variable name="m_userData" type="*"/>
        <variable name="m_type" type="int"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_islandFlag" type="Boolean"/>
        <method name="GetBody1" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <method name="InitPositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void"/>
        <variable name="m_collideConnected" type="Boolean"/>
        <variable name="m_body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_node1" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <variable name="m_next" type="Box2D.Dynamics.Joints::b2Joint"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2DistanceJoint" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2DistanceJoint">
        <extendsClass type="Box2D.Dynamics.Joints::b2Joint"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <variable name="m_bias" type="Number"/>
        <variable name="m_impulse" type="Number"/>
        <variable name="m_length" type="Number"/>
        <variable name="m_frequencyHz" type="Number"/>
        <method name="GetAnchor1" declaredBy="Box2D.Dynamics.Joints::b2DistanceJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_dampingRatio" type="Number"/>
        <method name="GetAnchor2" declaredBy="Box2D.Dynamics.Joints::b2DistanceJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_gamma" type="Number"/>
        <variable name="m_u" type="Box2D.Common.Math::b2Vec2"/>
        <method name="GetReactionForce" declaredBy="Box2D.Dynamics.Joints::b2DistanceJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="InitVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2DistanceJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <method name="GetReactionTorque" declaredBy="Box2D.Dynamics.Joints::b2DistanceJoint" returnType="Number"/>
        <variable name="m_localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <method name="SolvePositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2DistanceJoint" returnType="Boolean"/>
        <variable name="m_localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <method name="SolveVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2DistanceJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <variable name="m_mass" type="Number"/>
        <variable name="m_prev" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_node2" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <method name="GetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="*"/>
        <variable name="m_inv_dt" type="Number"/>
        <method name="GetType" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <method name="GetBody2" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <variable name="m_userData" type="*"/>
        <variable name="m_type" type="int"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_islandFlag" type="Boolean"/>
        <method name="GetBody1" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <method name="InitPositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void"/>
        <variable name="m_collideConnected" type="Boolean"/>
        <variable name="m_body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_node1" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <variable name="m_next" type="Box2D.Dynamics.Joints::b2Joint"/>
      </factory>
    </type>
    <type name="PBLabs.Rendering2D.UI::SceneView" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Rendering2D.UI::SceneView">
        <extendsClass type="flash.display::Sprite"/>
        <extendsClass type="flash.display::DisplayObjectContainer"/>
        <extendsClass type="flash.display::InteractiveObject"/>
        <extendsClass type="flash.display::DisplayObject"/>
        <extendsClass type="flash.events::EventDispatcher"/>
        <extendsClass type="Object"/>
        <implementsInterface type="flash.display::IBitmapDrawable"/>
        <implementsInterface type="PBLabs.Rendering2D.UI::IUITarget"/>
        <implementsInterface type="flash.events::IEventDispatcher"/>
        <method name="ClearDisplayObjects" declaredBy="PBLabs.Rendering2D.UI::SceneView" returnType="void"/>
        <accessor name="width" access="readwrite" type="Number" declaredBy="PBLabs.Rendering2D.UI::SceneView"/>
        <accessor name="height" access="readwrite" type="Number" declaredBy="PBLabs.Rendering2D.UI::SceneView"/>
        <method name="AddDisplayObject" declaredBy="PBLabs.Rendering2D.UI::SceneView" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="soundTransform" access="readwrite" type="flash.media::SoundTransform" declaredBy="flash.display::Sprite"/>
        <method name="startDrag" declaredBy="flash.display::Sprite" returnType="void">
          <parameter index="1" type="Boolean" optional="true"/>
          <parameter index="2" type="flash.geom::Rectangle" optional="true"/>
        </method>
        <accessor name="buttonMode" access="readwrite" type="Boolean" declaredBy="flash.display::Sprite"/>
        <accessor name="graphics" access="readonly" type="flash.display::Graphics" declaredBy="flash.display::Sprite"/>
        <method name="stopDrag" declaredBy="flash.display::Sprite" returnType="void"/>
        <accessor name="dropTarget" access="readonly" type="flash.display::DisplayObject" declaredBy="flash.display::Sprite"/>
        <accessor name="hitArea" access="readwrite" type="flash.display::Sprite" declaredBy="flash.display::Sprite"/>
        <accessor name="useHandCursor" access="readwrite" type="Boolean" declaredBy="flash.display::Sprite"/>
        <method name="addChildAt" declaredBy="flash.display::DisplayObjectContainer" returnType="flash.display::DisplayObject">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
          <parameter index="2" type="int" optional="false"/>
        </method>
        <method name="getChildIndex" declaredBy="flash.display::DisplayObjectContainer" returnType="int">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="tabChildren" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObjectContainer"/>
        <method name="areInaccessibleObjectsUnderPoint" declaredBy="flash.display::DisplayObjectContainer" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="mouseChildren" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObjectContainer"/>
        <method name="setChildIndex" declaredBy="flash.display::DisplayObjectContainer" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
          <parameter index="2" type="int" optional="false"/>
        </method>
        <method name="addChild" declaredBy="flash.display::DisplayObjectContainer" returnType="flash.display::DisplayObject">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="numChildren" access="readonly" type="int" declaredBy="flash.display::DisplayObjectContainer"/>
        <accessor name="textSnapshot" access="readonly" type="flash.text::TextSnapshot" declaredBy="flash.display::DisplayObjectContainer"/>
        <method name="swapChildrenAt" declaredBy="flash.display::DisplayObjectContainer" returnType="void">
          <parameter index="1" type="int" optional="false"/>
          <parameter index="2" type="int" optional="false"/>
        </method>
        <method name="swapChildren" declaredBy="flash.display::DisplayObjectContainer" returnType="void">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
          <parameter index="2" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="getChildByName" declaredBy="flash.display::DisplayObjectContainer" returnType="flash.display::DisplayObject">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="getObjectsUnderPoint" declaredBy="flash.display::DisplayObjectContainer" returnType="Array">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <method name="removeChildAt" declaredBy="flash.display::DisplayObjectContainer" returnType="flash.display::DisplayObject">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <method name="removeChild" declaredBy="flash.display::DisplayObjectContainer" returnType="flash.display::DisplayObject">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="contains" declaredBy="flash.display::DisplayObjectContainer" returnType="Boolean">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="getChildAt" declaredBy="flash.display::DisplayObjectContainer" returnType="flash.display::DisplayObject">
          <parameter index="1" type="int" optional="false"/>
        </method>
        <accessor name="doubleClickEnabled" access="readwrite" type="Boolean" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="contextMenu" access="readwrite" type="flash.ui::ContextMenu" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="tabEnabled" access="readwrite" type="Boolean" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="mouseEnabled" access="readwrite" type="Boolean" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="tabIndex" access="readwrite" type="int" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="accessibilityImplementation" access="readwrite" type="flash.accessibility::AccessibilityImplementation" declaredBy="flash.display::InteractiveObject">
          <metadata name="Inspectable">
            <arg key="environment" value="none"/>
          </metadata>
        </accessor>
        <accessor name="focusRect" access="readwrite" type="Object" declaredBy="flash.display::InteractiveObject"/>
        <accessor name="accessibilityProperties" access="readwrite" type="flash.accessibility::AccessibilityProperties" declaredBy="flash.display::DisplayObject"/>
        <accessor name="scrollRect" access="readwrite" type="flash.geom::Rectangle" declaredBy="flash.display::DisplayObject"/>
        <method name="getBounds" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Rectangle">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="alpha" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject"/>
        <accessor name="x" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject"/>
        <accessor name="opaqueBackground" access="readwrite" type="Object" declaredBy="flash.display::DisplayObject"/>
        <accessor name="cacheAsBitmap" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObject"/>
        <accessor name="y" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject"/>
        <accessor name="visible" access="readwrite" type="Boolean" declaredBy="flash.display::DisplayObject"/>
        <accessor name="scaleX" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject"/>
        <accessor name="mouseX" access="readonly" type="Number" declaredBy="flash.display::DisplayObject"/>
        <method name="hitTestPoint" declaredBy="flash.display::DisplayObject" returnType="Boolean">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
        </method>
        <accessor name="scaleY" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject"/>
        <accessor name="parent" access="readonly" type="flash.display::DisplayObjectContainer" declaredBy="flash.display::DisplayObject"/>
        <accessor name="mouseY" access="readonly" type="Number" declaredBy="flash.display::DisplayObject"/>
        <accessor name="mask" access="readwrite" type="flash.display::DisplayObject" declaredBy="flash.display::DisplayObject"/>
        <method name="getRect" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Rectangle">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <accessor name="rotation" access="readwrite" type="Number" declaredBy="flash.display::DisplayObject"/>
        <method name="localToGlobal" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="name" access="readwrite" type="String" declaredBy="flash.display::DisplayObject"/>
        <accessor name="transform" access="readwrite" type="flash.geom::Transform" declaredBy="flash.display::DisplayObject"/>
        <accessor name="blendMode" access="readwrite" type="String" declaredBy="flash.display::DisplayObject"/>
        <method name="globalToLocal" declaredBy="flash.display::DisplayObject" returnType="flash.geom::Point">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="filters" access="readwrite" type="Array" declaredBy="flash.display::DisplayObject"/>
        <accessor name="loaderInfo" access="readonly" type="flash.display::LoaderInfo" declaredBy="flash.display::DisplayObject"/>
        <accessor name="scale9Grid" access="readwrite" type="flash.geom::Rectangle" declaredBy="flash.display::DisplayObject"/>
        <accessor name="root" access="readonly" type="flash.display::DisplayObject" declaredBy="flash.display::DisplayObject"/>
        <accessor name="stage" access="readonly" type="flash.display::Stage" declaredBy="flash.display::DisplayObject"/>
        <method name="hitTestObject" declaredBy="flash.display::DisplayObject" returnType="Boolean">
          <parameter index="1" type="flash.display::DisplayObject" optional="false"/>
        </method>
        <method name="removeEventListener" declaredBy="flash.events::EventDispatcher" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Function" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
        </method>
        <method name="willTrigger" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="addEventListener" declaredBy="flash.events::EventDispatcher" returnType="void">
          <parameter index="1" type="String" optional="false"/>
          <parameter index="2" type="Function" optional="false"/>
          <parameter index="3" type="Boolean" optional="true"/>
          <parameter index="4" type="int" optional="true"/>
          <parameter index="5" type="Boolean" optional="true"/>
        </method>
        <method name="toString" declaredBy="flash.events::EventDispatcher" returnType="String"/>
        <method name="hasEventListener" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="String" optional="false"/>
        </method>
        <method name="dispatchEvent" declaredBy="flash.events::EventDispatcher" returnType="Boolean">
          <parameter index="1" type="flash.events::Event" optional="false"/>
        </method>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Contacts::b2PolygonContact" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <method name="Destroy" declaredBy="Box2D.Dynamics.Contacts::b2PolygonContact" returnType="void">
        <parameter index="1" type="Box2D.Dynamics.Contacts::b2Contact" optional="false"/>
        <parameter index="2" type="*" optional="false"/>
      </method>
      <method name="Create" declaredBy="Box2D.Dynamics.Contacts::b2PolygonContact" returnType="Box2D.Dynamics.Contacts::b2Contact">
        <parameter index="1" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
        <parameter index="2" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
        <parameter index="3" type="*" optional="false"/>
      </method>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Contacts::b2PolygonContact">
        <extendsClass type="Box2D.Dynamics.Contacts::b2Contact"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
        </constructor>
        <variable name="m_manifold" type="Box2D.Collision::b2Manifold"/>
        <method name="GetManifolds" declaredBy="Box2D.Dynamics.Contacts::b2PolygonContact" returnType="Array"/>
        <method name="Evaluate" declaredBy="Box2D.Dynamics.Contacts::b2PolygonContact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <method name="IsSolid" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Boolean"/>
        <variable name="m_node2" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <method name="Update" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <variable name="m_node1" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <variable name="m_prev" type="Box2D.Dynamics.Contacts::b2Contact"/>
        <variable name="m_shape1" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_toi" type="Number"/>
        <method name="GetManifoldCount" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="int"/>
        <variable name="m_restitution" type="Number"/>
        <method name="GetShape2" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_shape2" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_friction" type="Number"/>
        <variable name="m_flags" type="uint"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Dynamics.Contacts::b2Contact"/>
        <method name="GetShape1" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_manifoldCount" type="int"/>
        <variable name="m_next" type="Box2D.Dynamics.Contacts::b2Contact"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Contacts::b2PolyAndCircleContact" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <method name="Destroy" declaredBy="Box2D.Dynamics.Contacts::b2PolyAndCircleContact" returnType="void">
        <parameter index="1" type="Box2D.Dynamics.Contacts::b2Contact" optional="false"/>
        <parameter index="2" type="*" optional="false"/>
      </method>
      <method name="Create" declaredBy="Box2D.Dynamics.Contacts::b2PolyAndCircleContact" returnType="Box2D.Dynamics.Contacts::b2Contact">
        <parameter index="1" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
        <parameter index="2" type="Box2D.Collision.Shapes::b2Shape" optional="false"/>
        <parameter index="3" type="*" optional="false"/>
      </method>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Contacts::b2PolyAndCircleContact">
        <extendsClass type="Box2D.Dynamics.Contacts::b2Contact"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
          <parameter index="2" type="*" optional="false"/>
        </constructor>
        <variable name="m_manifold" type="Box2D.Collision::b2Manifold"/>
        <method name="GetManifolds" declaredBy="Box2D.Dynamics.Contacts::b2PolyAndCircleContact" returnType="Array"/>
        <method name="Evaluate" declaredBy="Box2D.Dynamics.Contacts::b2PolyAndCircleContact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <method name="IsSolid" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Boolean"/>
        <variable name="m_node2" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <method name="Update" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2ContactListener" optional="false"/>
        </method>
        <variable name="m_node1" type="Box2D.Dynamics.Contacts::b2ContactEdge"/>
        <variable name="m_prev" type="Box2D.Dynamics.Contacts::b2Contact"/>
        <variable name="m_shape1" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_toi" type="Number"/>
        <method name="GetManifoldCount" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="int"/>
        <variable name="m_restitution" type="Number"/>
        <method name="GetShape2" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_shape2" type="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_friction" type="Number"/>
        <variable name="m_flags" type="uint"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Dynamics.Contacts::b2Contact"/>
        <method name="GetShape1" declaredBy="Box2D.Dynamics.Contacts::b2Contact" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <variable name="m_manifoldCount" type="int"/>
        <variable name="m_next" type="Box2D.Dynamics.Contacts::b2Contact"/>
      </factory>
    </type>
    <type name="flash.geom::Rectangle" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="flash.geom::Rectangle">
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="Number" optional="true"/>
          <parameter index="2" type="Number" optional="true"/>
          <parameter index="3" type="Number" optional="true"/>
          <parameter index="4" type="Number" optional="true"/>
        </constructor>
        <method name="inflatePoint" declaredBy="flash.geom::Rectangle" returnType="void">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <accessor name="right" access="readwrite" type="Number" declaredBy="flash.geom::Rectangle"/>
        <method name="union" declaredBy="flash.geom::Rectangle" returnType="flash.geom::Rectangle">
          <parameter index="1" type="flash.geom::Rectangle" optional="false"/>
        </method>
        <accessor name="topLeft" access="readwrite" type="flash.geom::Point" declaredBy="flash.geom::Rectangle"/>
        <accessor name="top" access="readwrite" type="Number" declaredBy="flash.geom::Rectangle"/>
        <method name="contains" declaredBy="flash.geom::Rectangle" returnType="Boolean">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <method name="intersection" declaredBy="flash.geom::Rectangle" returnType="flash.geom::Rectangle">
          <parameter index="1" type="flash.geom::Rectangle" optional="false"/>
        </method>
        <method name="offsetPoint" declaredBy="flash.geom::Rectangle" returnType="void">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <method name="inflate" declaredBy="flash.geom::Rectangle" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <accessor name="bottom" access="readwrite" type="Number" declaredBy="flash.geom::Rectangle"/>
        <variable name="width" type="Number"/>
        <accessor name="bottomRight" access="readwrite" type="flash.geom::Point" declaredBy="flash.geom::Rectangle"/>
        <method name="isEmpty" declaredBy="flash.geom::Rectangle" returnType="Boolean"/>
        <method name="containsRect" declaredBy="flash.geom::Rectangle" returnType="Boolean">
          <parameter index="1" type="flash.geom::Rectangle" optional="false"/>
        </method>
        <method name="offset" declaredBy="flash.geom::Rectangle" returnType="void">
          <parameter index="1" type="Number" optional="false"/>
          <parameter index="2" type="Number" optional="false"/>
        </method>
        <method name="intersects" declaredBy="flash.geom::Rectangle" returnType="Boolean">
          <parameter index="1" type="flash.geom::Rectangle" optional="false"/>
        </method>
        <method name="setEmpty" declaredBy="flash.geom::Rectangle" returnType="void"/>
        <variable name="height" type="Number"/>
        <method name="clone" declaredBy="flash.geom::Rectangle" returnType="flash.geom::Rectangle"/>
        <variable name="x" type="Number"/>
        <accessor name="left" access="readwrite" type="Number" declaredBy="flash.geom::Rectangle"/>
        <method name="toString" declaredBy="flash.geom::Rectangle" returnType="String"/>
        <method name="equals" declaredBy="flash.geom::Rectangle" returnType="Boolean">
          <parameter index="1" type="flash.geom::Rectangle" optional="false"/>
        </method>
        <method name="containsPoint" declaredBy="flash.geom::Rectangle" returnType="Boolean">
          <parameter index="1" type="flash.geom::Point" optional="false"/>
        </method>
        <variable name="y" type="Number"/>
        <accessor name="size" access="readwrite" type="flash.geom::Point" declaredBy="flash.geom::Rectangle"/>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2GearJointDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2GearJointDef">
        <extendsClass type="Box2D.Dynamics.Joints::b2JointDef"/>
        <extendsClass type="Object"/>
        <variable name="joint1" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="ratio" type="Number"/>
        <variable name="joint2" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="collideConnected" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="userData" type="*"/>
      </factory>
    </type>
    <type name="PBLabs.Box2D::ContactListener" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="PBLabs.Box2D::ContactListener">
        <extendsClass type="Box2D.Dynamics::b2ContactListener"/>
        <extendsClass type="Object"/>
        <method name="Add" declaredBy="PBLabs.Box2D::ContactListener" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2ContactPoint" optional="false"/>
        </method>
        <method name="Result" declaredBy="PBLabs.Box2D::ContactListener" returnType="void">
          <parameter index="1" type="Box2D.Dynamics.Contacts::b2ContactResult" optional="false"/>
        </method>
        <method name="Remove" declaredBy="PBLabs.Box2D::ContactListener" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2ContactPoint" optional="false"/>
        </method>
        <method name="Persist" declaredBy="PBLabs.Box2D::ContactListener" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2ContactPoint" optional="false"/>
        </method>
      </factory>
    </type>
    <type name="Box2D.Dynamics.Joints::b2GearJoint" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Dynamics.Joints::b2GearJoint">
        <extendsClass type="Box2D.Dynamics.Joints::b2Joint"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <variable name="m_ratio" type="Number"/>
        <variable name="m_constant" type="Number"/>
        <method name="GetRatio" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="Number"/>
        <method name="SolvePositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="Boolean"/>
        <variable name="m_mass" type="Number"/>
        <variable name="m_ground2" type="Box2D.Dynamics::b2Body"/>
        <method name="SolveVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <method name="GetReactionTorque" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="Number"/>
        <variable name="m_prismatic1" type="Box2D.Dynamics.Joints::b2PrismaticJoint"/>
        <method name="GetAnchor2" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="GetAnchor1" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_groundAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <method name="GetReactionForce" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_J" type="Box2D.Dynamics.Joints::b2Jacobian"/>
        <variable name="m_groundAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_prismatic2" type="Box2D.Dynamics.Joints::b2PrismaticJoint"/>
        <variable name="m_revolute2" type="Box2D.Dynamics.Joints::b2RevoluteJoint"/>
        <variable name="m_localAnchor1" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_revolute1" type="Box2D.Dynamics.Joints::b2RevoluteJoint"/>
        <method name="InitVelocityConstraints" declaredBy="Box2D.Dynamics.Joints::b2GearJoint" returnType="void">
          <parameter index="1" type="Box2D.Dynamics::b2TimeStep" optional="false"/>
        </method>
        <variable name="m_localAnchor2" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="m_ground1" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_force" type="Number"/>
        <variable name="m_prev" type="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_node2" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <method name="GetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="*"/>
        <variable name="m_inv_dt" type="Number"/>
        <method name="GetType" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <method name="GetBody2" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <variable name="m_userData" type="*"/>
        <variable name="m_type" type="int"/>
        <method name="GetNext" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics.Joints::b2Joint"/>
        <variable name="m_body2" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_islandFlag" type="Boolean"/>
        <method name="GetBody1" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="Box2D.Dynamics::b2Body"/>
        <method name="InitPositionConstraints" declaredBy="Box2D.Dynamics.Joints::b2Joint" returnType="void"/>
        <variable name="m_collideConnected" type="Boolean"/>
        <variable name="m_body1" type="Box2D.Dynamics::b2Body"/>
        <variable name="m_node1" type="Box2D.Dynamics.Joints::b2JointEdge"/>
        <variable name="m_next" type="Box2D.Dynamics.Joints::b2Joint"/>
      </factory>
    </type>
    <type name="Box2D.Collision.Shapes::b2CircleShape" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Collision.Shapes::b2CircleShape">
        <extendsClass type="Box2D.Collision.Shapes::b2Shape"/>
        <extendsClass type="Object"/>
        <constructor>
          <parameter index="1" type="*" optional="false"/>
        </constructor>
        <method name="ComputeSweptAABB" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2AABB" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <method name="UpdateSweepRadius" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="void">
          <parameter index="1" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <method name="ComputeAABB" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2AABB" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <variable name="m_localPosition" type="Box2D.Common.Math::b2Vec2"/>
        <method name="ComputeMass" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="void">
          <parameter index="1" type="Box2D.Collision.Shapes::b2MassData" optional="false"/>
        </method>
        <method name="TestSegment" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="Boolean">
          <parameter index="1" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="2" type="Array" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2Vec2" optional="false"/>
          <parameter index="4" type="Box2D.Collision::b2Segment" optional="false"/>
          <parameter index="5" type="Number" optional="false"/>
        </method>
        <method name="TestPoint" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="Boolean">
          <parameter index="1" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2Vec2" optional="false"/>
        </method>
        <variable name="m_radius" type="Number"/>
        <method name="GetRadius" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="Number"/>
        <method name="GetLocalPosition" declaredBy="Box2D.Collision.Shapes::b2CircleShape" returnType="Box2D.Common.Math::b2Vec2"/>
        <method name="GetType" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="int"/>
        <method name="SetUserData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="*" optional="false"/>
        </method>
        <variable name="m_isSensor" type="Boolean"/>
        <variable name="m_type" type="int"/>
        <method name="GetFilterData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Box2D.Collision.Shapes::b2FilterData"/>
        <method name="RefilterProxy" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <variable name="m_restitution" type="Number"/>
        <method name="SetFilterData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision.Shapes::b2FilterData" optional="false"/>
        </method>
        <variable name="m_proxyId" type="uint"/>
        <variable name="m_userData" type="*"/>
        <method name="GetBody" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Box2D.Dynamics::b2Body"/>
        <method name="GetSweepRadius" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Number"/>
        <variable name="m_body" type="Box2D.Dynamics::b2Body"/>
        <method name="Synchronize" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Boolean">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
          <parameter index="3" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <variable name="m_sweepRadius" type="Number"/>
        <method name="GetRestitution" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Number"/>
        <method name="CreateProxy" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
          <parameter index="2" type="Box2D.Common.Math::b2XForm" optional="false"/>
        </method>
        <method name="IsSensor" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Boolean"/>
        <variable name="m_density" type="Number"/>
        <method name="GetNext" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Box2D.Collision.Shapes::b2Shape"/>
        <method name="GetUserData" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="*"/>
        <method name="GetFriction" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="Number"/>
        <variable name="m_friction" type="Number"/>
        <variable name="m_next" type="Box2D.Collision.Shapes::b2Shape"/>
        <method name="DestroyProxy" declaredBy="Box2D.Collision.Shapes::b2Shape" returnType="void">
          <parameter index="1" type="Box2D.Collision::b2BroadPhase" optional="false"/>
        </method>
        <variable name="m_filter" type="Box2D.Collision.Shapes::b2FilterData"/>
      </factory>
    </type>
    <type name="Box2D.Collision.Shapes::b2CircleDef" base="Class" isDynamic="true" isFinal="true" isStatic="true">
      <extendsClass type="Class"/>
      <extendsClass type="Object"/>
      <accessor name="prototype" access="readonly" type="*" declaredBy="Class"/>
      <factory type="Box2D.Collision.Shapes::b2CircleDef">
        <extendsClass type="Box2D.Collision.Shapes::b2ShapeDef"/>
        <extendsClass type="Object"/>
        <variable name="radius" type="Number"/>
        <variable name="localPosition" type="Box2D.Common.Math::b2Vec2"/>
        <variable name="userData" type="*"/>
        <variable name="density" type="Number"/>
        <variable name="isSensor" type="Boolean"/>
        <variable name="type" type="int"/>
        <variable name="filter" type="Box2D.Collision.Shapes::b2FilterData"/>
        <variable name="restitution" type="Number"/>
        <variable name="friction" type="Number"/>
      </factory>
    </type>
  </Types>
</PBESchema>